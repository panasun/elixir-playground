use Mix.Config

config :logger, handle_sasl_reports: true, level: :debug

config :libcluster, :topologies,
  cluster: [
    strategy: Cluster.Strategy.Epmd,
    config: [
      hosts: [:"node1@127.0.0.1", :"node2@127.0.0.1", :"node3@127.0.0.1"]
    ]
  ]
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster/config (main●●) 
$ clear
clear
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster/config (main●●) 
$ cd ..
cd ..
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●●) 
$ cd ..
cd ..
 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main●●) 
$ git status
git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)
	modified:   ex_cluster (modified content, untracked content)
	modified:   key_val_cluster/cubdb/account/0.cub
	modified:   key_val_cluster/lib/account.ex

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	key_val_cluster/config/.#config.exs
	key_val_cluster/config/config-emacs-elixir-format.exs

no changes added to commit (use "git add" and/or "git commit -a")
 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main●●) 
$ git add .
git add .
 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main●) 
$ git commit -m "fix"
git commit -m "fix"
[main 93653fe] fix
 4 files changed, 84 insertions(+), 37 deletions(-)
 create mode 120000 key_val_cluster/config/.#config.exs
 create mode 100644 key_val_cluster/config/config-emacs-elixir-format.exs
 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ git push
git push
Enumerating objects: 18, done.
Counting objects: 100% (18/18), done.
Delta compression using up to 8 threads
Compressing objects: 100% (8/8), done.
Writing objects: 100% (10/10), 1.51 KiB | 516.00 KiB/s, done.
Total 10 (delta 4), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (4/4), completed with 4 local objects.        
To github.com:panasun/elixir-playground.git
   87f62bf..93653fe  main -> main
 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ iex --name node3@127.0.0.1 --cookie mycookie -S mix
iex --name node3@127.0.0.1 --cookie mycookie -S mix
Erlang/OTP 26 [erts-14.0] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]

** (Mix) "mix" with no arguments must be executed in a directory with a mix.exs file

Usage: mix [task]

Examples:

    mix             - Invokes the default task (mix run) in a project
    mix new PATH    - Creates a new Elixir project at the given path
    mix help        - Lists all available tasks
    mix help TASK   - Prints documentation for a given task

The --help and --version options can be given instead of a task for usage and versioning information.

 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ cd key_val_cluster/
cd key_val_cluster/
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●) 
$ iex --name node3@127.0.0.1 --cookie mycookie -S mix
iex --name node3@127.0.0.1 --cookie mycookie -S mix
Erlang/OTP 26 [erts-14.0] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]

warning: use Mix.Config is deprecated. Use the Config module instead
  config/config.exs:1


13:18:51.979 [info] Child :disk_log_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.212.0>
Start Call: :disk_log_sup.start_link()
Restart: :permanent
Shutdown: 1000
Type: :supervisor

13:18:51.990 [info] Child :disk_log_server of Supervisor :kernel_safe_sup started
Pid: #PID<0.213.0>
Start Call: :disk_log_server.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker

13:18:52.005 [info] Application logger started at :"node3@127.0.0.1"

13:18:52.009 [info] Child :telemetry_handler_table of Supervisor :telemetry_sup started
Pid: #PID<0.236.0>
Start Call: :telemetry_handler_table.start_link()
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.010 [info] Application telemetry started at :"node3@127.0.0.1"

13:18:52.010 [info] Application merkle_map started at :"node3@127.0.0.1"

13:18:52.010 [info] Application delta_crdt started at :"node3@127.0.0.1"

13:18:52.015 [info] Application libring started at :"node3@127.0.0.1"

13:18:52.018 [info] Child :telemetry_poller_default of Supervisor :telemetry_poller_sup started
Pid: #PID<0.248.0>
Start Call: :telemetry_poller.start_link([name: :telemetry_poller_default, measurements: [:memory, :total_run_queue_lengths, :system_counts]])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.020 [info] Application telemetry_poller started at :"node3@127.0.0.1"

13:18:52.020 [info] Application horde started at :"node3@127.0.0.1"

13:18:52.020 [info] Application jason started at :"node3@127.0.0.1"

13:18:52.020 [info] Application libcluster started at :"node3@127.0.0.1"

13:18:52.021 [info] Application cubdb started at :"node3@127.0.0.1"

13:18:52.031 [info] Child of Supervisor :inet_gethost_native_sup started
Pid: #PID<0.259.0>
Start Call: :inet_gethost_native.init([])

13:18:52.031 [info] Child :inet_gethost_native_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.258.0>
Start Call: :inet_gethost_native.start_link()
Restart: :temporary
Shutdown: 1000
Type: :worker

13:18:52.035 [info] [libcluster:cluster] connected to :"node1@127.0.0.1"

13:18:52.036 [warning] [libcluster:cluster] unable to connect to :"node2@127.0.0.1"

13:18:52.036 [info] Child Cluster.Supervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.257.0>
Start Call: Cluster.Supervisor.start_link([[cluster: [strategy: Cluster.Strategy.Epmd, config: [hosts: [:"node1@127.0.0.1", :"node2@127.0.0.1", :"node3@127.0.0.1"]]]]])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:18:52.045 [info] Child KeyValCluster.Registry.Crdt of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.266.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.RegistryImpl, :on_diffs, [KeyValCluster.Registry]}, name: KeyValCluster.Registry.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

13:18:52.048 [info] Starting Horde.RegistryImpl with name KeyValCluster.Registry

13:18:52.051 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.267.0>
Start Call: Horde.RegistryImpl.start_link([name: KeyValCluster.Registry, listeners: [], meta: nil, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.052 [info] Child Horde.NodeListener of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.268.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.Registry)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.052 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.265.0>
Start Call: Horde.Registry.start_link([name: KeyValCluster.Registry, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:18:52.058 [info] Child KeyValCluster.KeyValSupervisor.Crdt of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.270.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.KeyValSupervisor]}, name: KeyValCluster.KeyValSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

13:18:52.058 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.KeyValSupervisor

13:18:52.059 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.271.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.KeyValSupervisor, root_name: KeyValCluster.KeyValSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 100000, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.059 [info] Child KeyValCluster.KeyValSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.272.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.KeyValSupervisor, type: :supervisor, name: KeyValCluster.KeyValSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 100000, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:18:52.059 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.273.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.KeyValSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.059 [info] Child KeyValCluster.KeyValSupervisor_telemetry_poller of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.274.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.KeyValSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.KeyValSupervisor]}], period: 5000, name: KeyValCluster.KeyValSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.059 [info] Child Horde.NodeListener of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.275.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.KeyValSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.059 [info] Child KeyValCluster.KeyValSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.269.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.KeyValSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 100000, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:18:52.059 [info] Child KeyValCluster.DBSupervisor.Crdt of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.277.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.DBSupervisor]}, name: KeyValCluster.DBSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

13:18:52.059 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.DBSupervisor

13:18:52.059 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.278.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.DBSupervisor, root_name: KeyValCluster.DBSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.060 [info] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.279.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:18:52.060 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.280.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.DBSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.060 [info] Child KeyValCluster.DBSupervisor_telemetry_poller of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.281.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.DBSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.DBSupervisor]}], period: 5000, name: KeyValCluster.DBSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.060 [info] Child Horde.NodeListener of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.282.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.DBSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.060 [info] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.276.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:18:52.060 [info] Child KeyValCluster.AccountSupervisor.Crdt of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.284.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.AccountSupervisor]}, name: KeyValCluster.AccountSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

13:18:52.060 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.AccountSupervisor

13:18:52.060 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.285.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.AccountSupervisor, root_name: KeyValCluster.AccountSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.060 [info] Child KeyValCluster.AccountSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.286.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.AccountSupervisor, type: :supervisor, name: KeyValCluster.AccountSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:18:52.060 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.287.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.AccountSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.060 [info] Child KeyValCluster.AccountSupervisor_telemetry_poller of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.288.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.AccountSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.AccountSupervisor]}], period: 5000, name: KeyValCluster.AccountSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.060 [info] Child Horde.NodeListener of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.289.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.AccountSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:18:52.060 [info] Child KeyValCluster.AccountSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.283.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.AccountSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:18:52.060 [info] Child KeyValCluster.ClusterConnector of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.290.0>
Start Call: Task.start_link(#Function<0.78117110/0 in KeyValCluster.Application.start/2>)
Restart: :transient
Shutdown: 5000
Type: :worker

13:18:52.062 [info] Application key_val_cluster started at :"node3@127.0.0.1"
Interactive Elixir (1.14.5) - press Ctrl+C to exit (type h() ENTER for help)
iex(node3@127.0.0.1)1> 
13:19:11.668 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}} of Supervisor #PID<0.302.0> (Supervisor.Default) started
Pid: #PID<0.303.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor


nil
iex(node3@127.0.0.1)2> KeyValCluster.Account.get("B8")
KeyValCluster.Account.get("B8")
44444
iex(node3@127.0.0.1)3> KeyValCluster.Account.add_auction("B8", 9)
KeyValCluster.Account.add_auction("B8", 9)
{:ok, #PID<0.330.0>}
iex(node3@127.0.0.1)4> KeyValCluster.Account.add_auction("B8", 10)
KeyValCluster.Account.add_auction("B8", 10)
{:ok, #PID<0.332.0>}
iex(node3@127.0.0.1)5> :init.stop
:init.stop
:ok
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●) 
$ iex --name node3@127.0.0.1 --cookie mycookie -S mix
iex --name node3@127.0.0.1 --cookie mycookie -S mix
Erlang/OTP 26 [erts-14.0] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]

warning: use Mix.Config is deprecated. Use the Config module instead
  config/config.exs:1


13:21:54.089 [info] Child :disk_log_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.212.0>
Start Call: :disk_log_sup.start_link()
Restart: :permanent
Shutdown: 1000
Type: :supervisor

13:21:54.098 [info] Child :disk_log_server of Supervisor :kernel_safe_sup started
Pid: #PID<0.213.0>
Start Call: :disk_log_server.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker

13:21:54.111 [info] Application logger started at :"node3@127.0.0.1"

13:21:54.115 [info] Child :telemetry_handler_table of Supervisor :telemetry_sup started
Pid: #PID<0.236.0>
Start Call: :telemetry_handler_table.start_link()
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.115 [info] Application telemetry started at :"node3@127.0.0.1"

13:21:54.115 [info] Application merkle_map started at :"node3@127.0.0.1"

13:21:54.115 [info] Application delta_crdt started at :"node3@127.0.0.1"

13:21:54.120 [info] Application libring started at :"node3@127.0.0.1"

13:21:54.123 [info] Child :telemetry_poller_default of Supervisor :telemetry_poller_sup started
Pid: #PID<0.248.0>
Start Call: :telemetry_poller.start_link([name: :telemetry_poller_default, measurements: [:memory, :total_run_queue_lengths, :system_counts]])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.124 [info] Application telemetry_poller started at :"node3@127.0.0.1"

13:21:54.125 [info] Application horde started at :"node3@127.0.0.1"

13:21:54.125 [info] Application jason started at :"node3@127.0.0.1"

13:21:54.125 [info] Application libcluster started at :"node3@127.0.0.1"

13:21:54.125 [info] Application cubdb started at :"node3@127.0.0.1"

13:21:54.134 [info] Child of Supervisor :inet_gethost_native_sup started
Pid: #PID<0.259.0>
Start Call: :inet_gethost_native.init([])

13:21:54.134 [info] Child :inet_gethost_native_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.258.0>
Start Call: :inet_gethost_native.start_link()
Restart: :temporary
Shutdown: 1000
Type: :worker

13:21:54.140 [info] [libcluster:cluster] connected to :"node1@127.0.0.1"

13:21:54.143 [info] [libcluster:cluster] connected to :"node2@127.0.0.1"

13:21:54.143 [info] Child Cluster.Supervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.257.0>
Start Call: Cluster.Supervisor.start_link([[cluster: [strategy: Cluster.Strategy.Epmd, config: [hosts: [:"node1@127.0.0.1", :"node2@127.0.0.1", :"node3@127.0.0.1"]]]]])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:21:54.154 [info] Child KeyValCluster.Registry.Crdt of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.269.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.RegistryImpl, :on_diffs, [KeyValCluster.Registry]}, name: KeyValCluster.Registry.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

13:21:54.156 [info] Starting Horde.RegistryImpl with name KeyValCluster.Registry

13:21:54.160 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.270.0>
Start Call: Horde.RegistryImpl.start_link([name: KeyValCluster.Registry, listeners: [], meta: nil, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.160 [info] Child Horde.NodeListener of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.271.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.Registry)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.161 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.268.0>
Start Call: Horde.Registry.start_link([name: KeyValCluster.Registry, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:21:54.167 [info] Child KeyValCluster.KeyValSupervisor.Crdt of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.273.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.KeyValSupervisor]}, name: KeyValCluster.KeyValSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

13:21:54.167 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.KeyValSupervisor

13:21:54.169 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.274.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.KeyValSupervisor, root_name: KeyValCluster.KeyValSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 100000, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.169 [info] Child KeyValCluster.KeyValSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.275.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.KeyValSupervisor, type: :supervisor, name: KeyValCluster.KeyValSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 100000, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:21:54.169 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.276.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.KeyValSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.169 [info] Child KeyValCluster.KeyValSupervisor_telemetry_poller of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.277.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.KeyValSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.KeyValSupervisor]}], period: 5000, name: KeyValCluster.KeyValSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.169 [info] Child Horde.NodeListener of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.278.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.KeyValSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.169 [info] Child KeyValCluster.KeyValSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.272.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.KeyValSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 100000, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:21:54.169 [info] Child KeyValCluster.DBSupervisor.Crdt of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.280.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.DBSupervisor]}, name: KeyValCluster.DBSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

13:21:54.170 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.DBSupervisor

13:21:54.170 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.281.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.DBSupervisor, root_name: KeyValCluster.DBSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.170 [info] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.282.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:21:54.170 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.283.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.DBSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.170 [info] Child KeyValCluster.DBSupervisor_telemetry_poller of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.284.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.DBSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.DBSupervisor]}], period: 5000, name: KeyValCluster.DBSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.170 [info] Child Horde.NodeListener of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.285.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.DBSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.170 [info] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.279.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:21:54.170 [info] Child KeyValCluster.AccountSupervisor.Crdt of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.287.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.AccountSupervisor]}, name: KeyValCluster.AccountSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

13:21:54.170 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.AccountSupervisor

13:21:54.171 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.288.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.AccountSupervisor, root_name: KeyValCluster.AccountSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.171 [info] Child KeyValCluster.AccountSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.289.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.AccountSupervisor, type: :supervisor, name: KeyValCluster.AccountSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:21:54.172 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.290.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.AccountSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.172 [info] Child KeyValCluster.AccountSupervisor_telemetry_poller of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.291.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.AccountSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.AccountSupervisor]}], period: 5000, name: KeyValCluster.AccountSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.172 [info] Child Horde.NodeListener of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.292.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.AccountSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.172 [info] Child KeyValCluster.AccountSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.286.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.AccountSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:21:54.172 [info] Child KeyValCluster.ClusterConnector of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.293.0>
Start Call: Task.start_link(#Function<0.78117110/0 in KeyValCluster.Application.start/2>)
Restart: :transient
Shutdown: 5000
Type: :worker

13:21:54.177 [info] Application key_val_cluster started at :"node3@127.0.0.1"
Interactive Elixir (1.14.5) - press Ctrl+C to exit (type h() ENTER for help)
iex(node3@127.0.0.1)1> 
13:21:54.287 [error] Child 159358993714918216282930504926397496133 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor terminated
** (exit) {:name_conflict, {:order, nil}, KeyValCluster.Registry, #PID<18676.999.0>}
Pid: #PID<0.295.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.287 [error] Child 159358993714918216282930504926397496133 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18676.999.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.288 [error] Child 159358993714918216282930504926397496133 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18676.999.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.288 [error] Child 159358993714918216282930504926397496133 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18676.999.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.290 [error] Child 159358993714918216282930504926397496133 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18676.999.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.290 [error] Child 159358993714918216282930504926397496133 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18676.999.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.290 [error] Child 159358993714918216282930504926397496133 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor caused shutdown
** (exit) :reached_max_restart_intensity
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.290 [error] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor terminated
** (exit) shutdown
Pid: #PID<0.282.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:21:54.290 [error] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor caused shutdown
** (exit) :reached_max_restart_intensity
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:21:54.293 [error] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor terminated
** (exit) shutdown
Pid: #PID<0.279.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:21:54.294 [info] Child KeyValCluster.DBSupervisor.Crdt of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.302.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.DBSupervisor]}, name: KeyValCluster.DBSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

13:21:54.294 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.DBSupervisor

13:21:54.294 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.303.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.DBSupervisor, root_name: KeyValCluster.DBSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.294 [info] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.304.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:21:54.295 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.305.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.DBSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.295 [info] Child KeyValCluster.DBSupervisor_telemetry_poller of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.306.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.DBSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.DBSupervisor]}], period: 5000, name: KeyValCluster.DBSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.295 [info] Child Horde.NodeListener of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.307.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.DBSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

13:21:54.295 [info] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.301.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:21:54.292 [error] GenServer #PID<0.300.0> terminating
** (stop) {:name_conflict, {:order, nil}, KeyValCluster.Registry, #PID<18676.999.0>}
Last message: {:EXIT, #PID<0.296.0>, {:name_conflict, {:order, nil}, KeyValCluster.Registry, #PID<18676.999.0>}}
State: %DynamicSupervisor{args: {{:temporary, 5000}, []}, extra_arguments: [], mod: Task.Supervisor, name: {#PID<0.300.0>, Task.Supervisor}, strategy: :one_for_one, max_children: :infinity, max_restarts: 3, max_seconds: 5, children: %{}, restarts: []}

13:21:54.307 [error] Process #PID<0.300.0> terminating
** (exit) {:name_conflict, {:order, nil}, KeyValCluster.Registry, #PID<18676.999.0>}
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: Task.Supervisor.init/1
Ancestors: [#PID<0.296.0>, #PID<0.295.0>, KeyValCluster.DBSupervisor.ProcessesSupervisor, KeyValCluster.DBSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: [{Task.Supervisor, {:temporary, 5000}}]
Trapping Exits: true
Status: :running
Heap Size: 2586
Stack Size: 28
Reductions: 3679


nil
iex(node3@127.0.0.1)2> KeyValCluster.Account.add_auction("B8", 10)
KeyValCluster.Account.add_auction("B8", 10)
{:ok, #PID<18677.350.0>}
iex(node3@127.0.0.1)3> KeyValCluster.Account.add_auction("B8", 8)
KeyValCluster.Account.add_auction("B8", 8)
{:error, {:already_started, #PID<18677.342.0>}}
iex(node3@127.0.0.1)4> 
13:22:49.208 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}} of Supervisor #PID<0.319.0> (Supervisor.Default) started
Pid: #PID<0.320.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:22:49.225 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.322.0> (Supervisor.Default) started
Pid: #PID<0.323.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:22:49.232 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.325.0> (Supervisor.Default) started
Pid: #PID<0.326.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:22:49.235 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}} of Supervisor #PID<0.328.0> (Supervisor.Default) started
Pid: #PID<0.329.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

13:22:49.237 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}} of Supervisor #PID<0.331.0> (Supervisor.Default) started
Pid: #PID<0.332.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor


nil
iex(node3@127.0.0.1)5> KeyValCluster.Account.add_auction("B8", 10)
KeyValCluster.Account.add_auction("B8", 10)
{:ok, #PID<0.336.0>}
iex(node3@127.0.0.1)6> KeyValCluster.Account.add_auction("B8", 11)
KeyValCluster.Account.add_auction("B8", 11)
{:ok, #PID<0.338.0>}
iex(node3@127.0.0.1)7> KeyValCluster.Account.add_auction("B8", 12)
KeyValCluster.Account.add_auction("B8", 12)
{:ok, #PID<0.340.0>}
iex(node3@127.0.0.1)8> KeyValCluster.Account.add_auction("B8", 13)
KeyValCluster.Account.add_auction("B8", 13)
{:ok, #PID<0.342.0>}
iex(node3@127.0.0.1)9>   C-c C-c^C
BREAK: (a)bort (A)bort with dump (c)ontinue (p)roc info (i)nfo
       (l)oaded (v)ersion (k)ill (D)b-tables (d)istribution
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●) 
$ git status
git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)
	modified:   ../ex_cluster (modified content, untracked content)
	modified:   cubdb/account/0.cub

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	config/#config.exs#

no changes added to commit (use "git add" and/or "git commit -a")
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●●) 
$ git add   C-c C-c
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●●) 
$ cd ..
cd ..
 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main●●) 
$ git add .
git add .
 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main●) 
$ git commit -m "fix
git commit -m "fix
dquote> "
"
[main f96dffe] fix
 2 files changed, 894 insertions(+)
 create mode 100644 key_val_cluster/config/#config.exs#
 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ git push
git push
Enumerating objects: 14, done.
Counting objects: 100% (14/14), done.
Delta compression using up to 8 threads
Compressing objects: 100% (7/7), done.
Writing objects: 100% (8/8), 5.39 KiB | 1.35 MiB/s, done.
Total 8 (delta 4), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (4/4), completed with 4 local objects.        
To github.com:panasun/elixir-playground.git
   93653fe..f96dffe  main -> main
 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ iex --name node3@127.0.0.1 --cookie mycookie -S mix
iex --name node3@127.0.0.1 --cookie mycookie -S mix
Erlang/OTP 26 [erts-14.0] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]

** (Mix) "mix" with no arguments must be executed in a directory with a mix.exs file

Usage: mix [task]

Examples:

    mix             - Invokes the default task (mix run) in a project
    mix new PATH    - Creates a new Elixir project at the given path
    mix help        - Lists all available tasks
    mix help TASK   - Prints documentation for a given task

The --help and --version options can be given instead of a task for usage and versioning information.

 
panasun at nodebin in ~/Projects/panasun/elixir-playground (main) 
$ cd key_val_cluster/
cd key_val_cluster/
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●) 
$ iex --name node3@127.0.0.1 --cookie mycookie -S mix
iex --name node3@127.0.0.1 --cookie mycookie -S mix
Erlang/OTP 26 [erts-14.0] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]

warning: use Mix.Config is deprecated. Use the Config module instead
  config/config.exs:1


15:04:34.472 [info] Child :disk_log_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.212.0>
Start Call: :disk_log_sup.start_link()
Restart: :permanent
Shutdown: 1000
Type: :supervisor

15:04:34.482 [info] Child :disk_log_server of Supervisor :kernel_safe_sup started
Pid: #PID<0.213.0>
Start Call: :disk_log_server.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker

15:04:34.496 [info] Application logger started at :"node3@127.0.0.1"

15:04:34.499 [info] Child :telemetry_handler_table of Supervisor :telemetry_sup started
Pid: #PID<0.236.0>
Start Call: :telemetry_handler_table.start_link()
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.499 [info] Application telemetry started at :"node3@127.0.0.1"

15:04:34.499 [info] Application merkle_map started at :"node3@127.0.0.1"

15:04:34.499 [info] Application delta_crdt started at :"node3@127.0.0.1"

15:04:34.505 [info] Application libring started at :"node3@127.0.0.1"

15:04:34.508 [info] Child :telemetry_poller_default of Supervisor :telemetry_poller_sup started
Pid: #PID<0.248.0>
Start Call: :telemetry_poller.start_link([name: :telemetry_poller_default, measurements: [:memory, :total_run_queue_lengths, :system_counts]])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.509 [info] Application telemetry_poller started at :"node3@127.0.0.1"

15:04:34.509 [info] Application horde started at :"node3@127.0.0.1"

15:04:34.509 [info] Application jason started at :"node3@127.0.0.1"

15:04:34.509 [info] Application libcluster started at :"node3@127.0.0.1"

15:04:34.509 [info] Application cubdb started at :"node3@127.0.0.1"

15:04:34.520 [info] Child of Supervisor :inet_gethost_native_sup started
Pid: #PID<0.259.0>
Start Call: :inet_gethost_native.init([])

15:04:34.520 [info] Child :inet_gethost_native_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.258.0>
Start Call: :inet_gethost_native.start_link()
Restart: :temporary
Shutdown: 1000
Type: :worker

15:04:34.522 [warning] [libcluster:cluster] unable to connect to :"node1@127.0.0.1"

15:04:34.524 [info] [libcluster:cluster] connected to :"node2@127.0.0.1"

15:04:34.524 [info] Child Cluster.Supervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.257.0>
Start Call: Cluster.Supervisor.start_link([[cluster: [strategy: Cluster.Strategy.Epmd, config: [hosts: [:"node1@127.0.0.1", :"node2@127.0.0.1", :"node3@127.0.0.1"]]]]])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:04:34.535 [info] Child KeyValCluster.Registry.Crdt of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.266.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.RegistryImpl, :on_diffs, [KeyValCluster.Registry]}, name: KeyValCluster.Registry.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:04:34.538 [info] Starting Horde.RegistryImpl with name KeyValCluster.Registry

15:04:34.541 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.267.0>
Start Call: Horde.RegistryImpl.start_link([name: KeyValCluster.Registry, listeners: [], meta: nil, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.541 [info] Child Horde.NodeListener of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.268.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.Registry)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.541 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.265.0>
Start Call: Horde.Registry.start_link([name: KeyValCluster.Registry, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:04:34.548 [info] Child KeyValCluster.KeyValSupervisor.Crdt of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.270.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.KeyValSupervisor]}, name: KeyValCluster.KeyValSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:04:34.548 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.KeyValSupervisor

15:04:34.549 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.271.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.KeyValSupervisor, root_name: KeyValCluster.KeyValSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 100000, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.549 [info] Child KeyValCluster.KeyValSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.272.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.KeyValSupervisor, type: :supervisor, name: KeyValCluster.KeyValSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 100000, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:04:34.549 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.273.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.KeyValSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.549 [info] Child KeyValCluster.KeyValSupervisor_telemetry_poller of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.274.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.KeyValSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.KeyValSupervisor]}], period: 5000, name: KeyValCluster.KeyValSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.549 [info] Child Horde.NodeListener of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.275.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.KeyValSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.549 [info] Child KeyValCluster.KeyValSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.269.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.KeyValSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 100000, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:04:34.549 [info] Child KeyValCluster.DBSupervisor.Crdt of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.277.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.DBSupervisor]}, name: KeyValCluster.DBSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:04:34.549 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.DBSupervisor

15:04:34.549 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.278.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.DBSupervisor, root_name: KeyValCluster.DBSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.550 [info] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.279.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:04:34.550 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.280.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.DBSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.550 [info] Child KeyValCluster.DBSupervisor_telemetry_poller of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.281.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.DBSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.DBSupervisor]}], period: 5000, name: KeyValCluster.DBSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.550 [info] Child Horde.NodeListener of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.282.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.DBSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.550 [info] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.276.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:04:34.550 [info] Child KeyValCluster.AccountSupervisor.Crdt of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.284.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.AccountSupervisor]}, name: KeyValCluster.AccountSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:04:34.550 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.AccountSupervisor

15:04:34.550 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.285.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.AccountSupervisor, root_name: KeyValCluster.AccountSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.550 [info] Child KeyValCluster.AccountSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.286.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.AccountSupervisor, type: :supervisor, name: KeyValCluster.AccountSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:04:34.550 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.287.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.AccountSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.550 [info] Child KeyValCluster.AccountSupervisor_telemetry_poller of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.288.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.AccountSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.AccountSupervisor]}], period: 5000, name: KeyValCluster.AccountSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.550 [info] Child Horde.NodeListener of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.289.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.AccountSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.550 [info] Child KeyValCluster.AccountSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.283.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.AccountSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:04:34.550 [info] Child KeyValCluster.ClusterConnector of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.290.0>
Start Call: Task.start_link(#Function<0.78117110/0 in KeyValCluster.Application.start/2>)
Restart: :transient
Shutdown: 5000
Type: :worker

15:04:34.552 [info] Application key_val_cluster started at :"node3@127.0.0.1"
Interactive Elixir (1.14.5) - press Ctrl+C to exit (type h() ENTER for help)
iex(node3@127.0.0.1)1> 
15:04:34.606 [error] Child 167213259463707192331805606851901358612 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor terminated
** (exit) {:name_conflict, {:order, nil}, KeyValCluster.Registry, #PID<18677.305.0>}
Pid: #PID<0.292.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.606 [error] Child 167213259463707192331805606851901358612 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18677.305.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.606 [error] Child 167213259463707192331805606851901358612 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18677.305.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.606 [error] Child 167213259463707192331805606851901358612 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18677.305.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.606 [error] Child 167213259463707192331805606851901358612 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18677.305.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.607 [error] Child 167213259463707192331805606851901358612 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18677.305.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.607 [error] Child 167213259463707192331805606851901358612 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor caused shutdown
** (exit) :reached_max_restart_intensity
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.607 [error] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor terminated
** (exit) shutdown
Pid: #PID<0.279.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:04:34.607 [error] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor caused shutdown
** (exit) :reached_max_restart_intensity
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:04:34.607 [error] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor terminated
** (exit) shutdown
Pid: #PID<0.276.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:04:34.607 [info] Child KeyValCluster.DBSupervisor.Crdt of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.299.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.DBSupervisor]}, name: KeyValCluster.DBSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:04:34.608 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.DBSupervisor

15:04:34.608 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.300.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.DBSupervisor, root_name: KeyValCluster.DBSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.608 [info] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.301.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:04:34.608 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.302.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.DBSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.608 [info] Child KeyValCluster.DBSupervisor_telemetry_poller of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.303.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.DBSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.DBSupervisor]}], period: 5000, name: KeyValCluster.DBSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.608 [info] Child Horde.NodeListener of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.304.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.DBSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:04:34.608 [info] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.298.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:04:34.610 [error] GenServer #PID<0.297.0> terminating
** (stop) {:name_conflict, {:order, nil}, KeyValCluster.Registry, #PID<18677.305.0>}
Last message: {:EXIT, #PID<0.293.0>, {:name_conflict, {:order, nil}, KeyValCluster.Registry, #PID<18677.305.0>}}
State: %DynamicSupervisor{args: {{:temporary, 5000}, []}, extra_arguments: [], mod: Task.Supervisor, name: {#PID<0.297.0>, Task.Supervisor}, strategy: :one_for_one, max_children: :infinity, max_restarts: 3, max_seconds: 5, children: %{}, restarts: []}

15:04:34.613 [error] Process #PID<0.297.0> terminating
** (exit) {:name_conflict, {:order, nil}, KeyValCluster.Registry, #PID<18677.305.0>}
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: Task.Supervisor.init/1
Ancestors: [#PID<0.293.0>, #PID<0.292.0>, KeyValCluster.DBSupervisor.ProcessesSupervisor, KeyValCluster.DBSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: [{Task.Supervisor, {:temporary, 5000}}]
Trapping Exits: true
Status: :running
Heap Size: 2586
Stack Size: 28
Reductions: 3679


nil
iex(node3@127.0.0.1)2> 
15:05:07.229 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.310.0> (Supervisor.Default) started
Pid: #PID<0.311.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B2"

15:05:07.233 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} of Supervisor #PID<0.310.0> (Supervisor.Default) started
Pid: #PID<0.312.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B2_4436"
"B2_7231"
"B2_9459"
"B2_5015"
"B2_3114"

15:05:19.944 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.321.0> (Supervisor.Default) started
Pid: #PID<0.322.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B4"

15:05:19.944 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B4"}}} of Supervisor #PID<0.321.0> (Supervisor.Default) started
Pid: #PID<0.323.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B4_4436"
"B4_7231"
"B4_9459"
"B4_5015"
"B4_3114"

15:06:40.122 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}} of Supervisor #PID<0.345.0> (Supervisor.Default) started
Pid: #PID<0.346.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:06:40.123 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B7"}}} of Supervisor #PID<0.345.0> (Supervisor.Default) started
Pid: #PID<0.347.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B7"
"B7_4436"
"B7_7231"
"B7_9459"
"B7_5015"
"B7_3114"

15:06:43.091 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}} of Supervisor #PID<0.354.0> (Supervisor.Default) started
Pid: #PID<0.355.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B8"

15:06:43.091 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}} of Supervisor #PID<0.354.0> (Supervisor.Default) started
Pid: #PID<0.356.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B8_4436"
"B8_7231"
"B8_9459"
"B8_5015"
"B8_3114"

15:07:01.258 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.367.0> (Supervisor.Default) started
Pid: #PID<0.368.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B3"

15:07:01.259 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.367.0> (Supervisor.Default) started
Pid: #PID<0.369.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker

15:07:01.259 [error] Process #PID<0.366.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.286.0>, #PID<0.367.0>, #PID<0.267.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 233
Stack Size: 28
Reductions: 325

15:07:01.260 [error] GenServer #PID<0.367.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.366.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000]}}}
State: {:state, {#PID<0.367.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} => {:child, #PID<0.368.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} => {:child, #PID<0.369.0>, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {Task, :start_link, [#Function<0.56339264/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.56339264/0 in KeyValCluster.Account.init/1>]}}]}}}

15:07:01.261 [error] Process #PID<0.367.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.366.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 18124

15:07:01.269 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.371.0> (Supervisor.Default) started
Pid: #PID<0.372.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B3"

15:07:01.270 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.371.0> (Supervisor.Default) started
Pid: #PID<0.373.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3_4436"
"B3_7231"
"B3_9459"
"B3_5015"
"B3_3114"

15:07:01.270 [error] Process #PID<0.370.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.286.0>, #PID<0.371.0>, #PID<0.267.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 233
Stack Size: 28
Reductions: 325

15:07:01.270 [error] GenServer #PID<0.371.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.370.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000]}}}
State: {:state, {#PID<0.371.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} => {:child, #PID<0.372.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} => {:child, :undefined, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {Task, :start_link, [#Function<0.56339264/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.56339264/0 in KeyValCluster.Account.init/1>]}}]}}}

15:07:01.271 [error] Process #PID<0.371.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.370.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 4185
Stack Size: 28
Reductions: 18171

15:07:10.491 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}} of Supervisor #PID<0.380.0> (Supervisor.Default) started
Pid: #PID<0.381.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B6"

15:07:10.491 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B6"}}} of Supervisor #PID<0.380.0> (Supervisor.Default) started
Pid: #PID<0.383.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B6_4436"
"B6_7231"
"B6_9459"
"B6_5015"
"B6_3114"
"B5"

15:07:10.495 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B5"}} of Supervisor #PID<0.389.0> (Supervisor.Default) started
Pid: #PID<0.391.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B5"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B5_4436"

15:07:10.495 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B5"}}} of Supervisor #PID<0.389.0> (Supervisor.Default) started
Pid: #PID<0.394.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B5_7231"
"B5_9459"
"B5_5015"
"B5_3114"

15:07:10.496 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.401.0> (Supervisor.Default) started
Pid: #PID<0.402.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B3"
"B3_4436"
"B3_7231"

15:07:10.496 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.401.0> (Supervisor.Default) started
Pid: #PID<0.403.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3_9459"
"B3_5015"
"B3_3114"

15:07:10.497 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}} of Supervisor #PID<0.408.0> (Supervisor.Default) started
Pid: #PID<0.409.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B1"
"B1_4436"

15:07:10.497 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B1"}}} of Supervisor #PID<0.408.0> (Supervisor.Default) started
Pid: #PID<0.412.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B1_7231"
"B1_9459"
"B1_5015"
"B1_3114"
"B1_9459"  C-c C-c^C
BREAK: (a)bort (A)bort with dump (c)ontinue (p)roc info (i)nfo
       (l)oaded (v)ersion (k)ill (D)b-tables (d)istribution
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●) 
$ iex --name node3@127.0.0.1 --cookie mycookie -S mix
iex --name node3@127.0.0.1 --cookie mycookie -S mix
Erlang/OTP 26 [erts-14.0] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]

warning: use Mix.Config is deprecated. Use the Config module instead
  config/config.exs:1


15:07:17.252 [info] Child :disk_log_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.212.0>
Start Call: :disk_log_sup.start_link()
Restart: :permanent
Shutdown: 1000
Type: :supervisor

15:07:17.261 [info] Child :disk_log_server of Supervisor :kernel_safe_sup started
Pid: #PID<0.213.0>
Start Call: :disk_log_server.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker

15:07:17.276 [info] Application logger started at :"node3@127.0.0.1"

15:07:17.279 [info] Child :telemetry_handler_table of Supervisor :telemetry_sup started
Pid: #PID<0.236.0>
Start Call: :telemetry_handler_table.start_link()
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.279 [info] Application telemetry started at :"node3@127.0.0.1"

15:07:17.279 [info] Application merkle_map started at :"node3@127.0.0.1"

15:07:17.279 [info] Application delta_crdt started at :"node3@127.0.0.1"

15:07:17.284 [info] Application libring started at :"node3@127.0.0.1"

15:07:17.286 [info] Child :telemetry_poller_default of Supervisor :telemetry_poller_sup started
Pid: #PID<0.248.0>
Start Call: :telemetry_poller.start_link([name: :telemetry_poller_default, measurements: [:memory, :total_run_queue_lengths, :system_counts]])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.287 [info] Application telemetry_poller started at :"node3@127.0.0.1"

15:07:17.287 [info] Application horde started at :"node3@127.0.0.1"

15:07:17.287 [info] Application jason started at :"node3@127.0.0.1"

15:07:17.288 [info] Application libcluster started at :"node3@127.0.0.1"

15:07:17.288 [info] Application cubdb started at :"node3@127.0.0.1"

15:07:17.297 [info] Child of Supervisor :inet_gethost_native_sup started
Pid: #PID<0.259.0>
Start Call: :inet_gethost_native.init([])

15:07:17.297 [info] Child :inet_gethost_native_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.258.0>
Start Call: :inet_gethost_native.start_link()
Restart: :temporary
Shutdown: 1000
Type: :worker

15:07:17.299 [warning] [libcluster:cluster] unable to connect to :"node1@127.0.0.1"

15:07:17.300 [warning] [libcluster:cluster] unable to connect to :"node2@127.0.0.1"

15:07:17.300 [info] Child Cluster.Supervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.257.0>
Start Call: Cluster.Supervisor.start_link([[cluster: [strategy: Cluster.Strategy.Epmd, config: [hosts: [:"node1@127.0.0.1", :"node2@127.0.0.1", :"node3@127.0.0.1"]]]]])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:07:17.309 [info] Child KeyValCluster.Registry.Crdt of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.265.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.RegistryImpl, :on_diffs, [KeyValCluster.Registry]}, name: KeyValCluster.Registry.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:07:17.311 [info] Starting Horde.RegistryImpl with name KeyValCluster.Registry

15:07:17.314 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.266.0>
Start Call: Horde.RegistryImpl.start_link([name: KeyValCluster.Registry, listeners: [], meta: nil, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.314 [info] Child Horde.NodeListener of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.267.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.Registry)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.314 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.264.0>
Start Call: Horde.Registry.start_link([name: KeyValCluster.Registry, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:07:17.320 [info] Child KeyValCluster.KeyValSupervisor.Crdt of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.269.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.KeyValSupervisor]}, name: KeyValCluster.KeyValSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:07:17.320 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.KeyValSupervisor

15:07:17.322 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.270.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.KeyValSupervisor, root_name: KeyValCluster.KeyValSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 100000, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.322 [info] Child KeyValCluster.KeyValSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.271.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.KeyValSupervisor, type: :supervisor, name: KeyValCluster.KeyValSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 100000, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:07:17.322 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.272.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.KeyValSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.322 [info] Child KeyValCluster.KeyValSupervisor_telemetry_poller of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.273.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.KeyValSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.KeyValSupervisor]}], period: 5000, name: KeyValCluster.KeyValSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.322 [info] Child Horde.NodeListener of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.274.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.KeyValSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.322 [info] Child KeyValCluster.KeyValSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.268.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.KeyValSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 100000, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:07:17.322 [info] Child KeyValCluster.DBSupervisor.Crdt of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.276.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.DBSupervisor]}, name: KeyValCluster.DBSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:07:17.322 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.DBSupervisor

15:07:17.322 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.277.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.DBSupervisor, root_name: KeyValCluster.DBSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.322 [info] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.278.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:07:17.322 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.279.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.DBSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.323 [info] Child KeyValCluster.DBSupervisor_telemetry_poller of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.280.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.DBSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.DBSupervisor]}], period: 5000, name: KeyValCluster.DBSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.323 [info] Child Horde.NodeListener of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.281.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.DBSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.323 [info] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.275.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:07:17.323 [info] Child KeyValCluster.AccountSupervisor.Crdt of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.283.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.AccountSupervisor]}, name: KeyValCluster.AccountSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:07:17.323 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.AccountSupervisor

15:07:17.323 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.284.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.AccountSupervisor, root_name: KeyValCluster.AccountSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.323 [info] Child KeyValCluster.AccountSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.285.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.AccountSupervisor, type: :supervisor, name: KeyValCluster.AccountSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:07:17.323 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.286.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.AccountSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.323 [info] Child KeyValCluster.AccountSupervisor_telemetry_poller of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.287.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.AccountSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.AccountSupervisor]}], period: 5000, name: KeyValCluster.AccountSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.323 [info] Child Horde.NodeListener of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.288.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.AccountSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:07:17.323 [info] Child KeyValCluster.AccountSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.282.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.AccountSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:07:17.324 [info] Child KeyValCluster.ClusterConnector of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.289.0>
Start Call: Task.start_link(#Function<0.78117110/0 in KeyValCluster.Application.start/2>)
Restart: :transient
Shutdown: 5000
Type: :worker

15:07:17.325 [info] Application key_val_cluster started at :"node3@127.0.0.1"
Interactive Elixir (1.14.5) - press Ctrl+C to exit (type h() ENTER for help)
iex(node3@127.0.0.1)1> 
15:07:59.512 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.315.0> (Supervisor.Default) started
Pid: #PID<0.316.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B2"

15:07:59.516 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} of Supervisor #PID<0.315.0> (Supervisor.Default) started
Pid: #PID<0.317.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B2_4436"
"B2_7231"
"B2_9459"
"B2_5015"
"B2_3114"

15:08:32.430 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.329.0> (Supervisor.Default) started
Pid: #PID<0.330.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B4"

15:08:32.431 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B4"}}} of Supervisor #PID<0.329.0> (Supervisor.Default) started
Pid: #PID<0.331.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B4_4436"
"B4_7231"
"B4_9459"
"B4_5015"
"B4_3114"

15:08:50.790 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.343.0> (Supervisor.Default) started
Pid: #PID<0.344.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B3"

15:08:50.790 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.343.0> (Supervisor.Default) started
Pid: #PID<0.346.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3_4436"
"B3_7231"
"B3_9459"
"B3_5015"
"B3_3114"
"B1"

15:09:15.542 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}} of Supervisor #PID<0.358.0> (Supervisor.Default) started
Pid: #PID<0.359.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B1_4436"

15:09:15.542 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B1"}}} of Supervisor #PID<0.358.0> (Supervisor.Default) started
Pid: #PID<0.360.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B1_7231"
"B1_9459"
"B1_5015"
"B1_3114"

15:09:15.544 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B5"}} of Supervisor #PID<0.363.0> (Supervisor.Default) started
Pid: #PID<0.365.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B5"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B5"

15:09:15.544 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B5"}}} of Supervisor #PID<0.363.0> (Supervisor.Default) started
Pid: #PID<0.367.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B5_4436"
"B5_7231"
"B5_9459"
"B5_5015"
"B5_3114"

15:09:29.451 [error] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.315.0> (Supervisor.Default) terminated
** (exit) killed
Pid: #PID<0.316.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:09:29.451 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.315.0> (Supervisor.Default) started
Pid: #PID<0.378.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B2"

15:09:29.451 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} of Supervisor #PID<0.315.0> (Supervisor.Default) started
Pid: #PID<0.379.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B2_4436"
"B2_7231"
"B2_9459"
"B2_5015"
"B2_3114"

15:09:43.418 [error] Child 204583353616811321032548466939927979811 of Supervisor KeyValCluster.AccountSupervisor.ProcessesSupervisor terminated
** (exit) killed
Pid: #PID<0.314.0>
Start Call: KeyValCluster.Account.start_link("B2")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:09:43.418 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.395.0> (Supervisor.Default) started
Pid: #PID<0.396.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B2"

15:09:43.418 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} of Supervisor #PID<0.395.0> (Supervisor.Default) started
Pid: #PID<0.397.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B2_4436"
"B2_7231"
"B2_9459"
"B2_5015"
"B2_3114"

15:09:43.418 [error] GenServer #PID<0.315.0> terminating
** (stop) killed
Last message: {:EXIT, #PID<0.314.0>, :killed}
State: {:state, {#PID<0.315.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} => {:child, #PID<0.378.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} => {:child, :undefined, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}}, {Task, :start_link, [#Function<0.56339264/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [-576460620], 0, :never, Supervisor.Default, {:ok, {%{strategy: :rest_for_one, period: 5, intensity: 3}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.56339264/0 in KeyValCluster.Account.init/1>]}}]}}}

15:09:43.420 [error] Process #PID<0.315.0> terminating
** (exit) killed
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.314.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 22284

15:09:47.103 [error] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.329.0> (Supervisor.Default) terminated
** (exit) killed
Pid: #PID<0.330.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:09:47.103 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.329.0> (Supervisor.Default) started
Pid: #PID<0.403.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B4"
"B4_4436"

15:09:47.103 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B4"}}} of Supervisor #PID<0.329.0> (Supervisor.Default) started
Pid: #PID<0.404.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B4_7231"
"B4_9459"
"B4_5015"
"B4_3114"

15:10:05.278 [error] Child 143445661349222788694137414513524442515 of Supervisor KeyValCluster.AccountSupervisor.ProcessesSupervisor terminated
** (exit) killed
Pid: #PID<0.328.0>
Start Call: KeyValCluster.Account.start_link("B4")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:10:05.279 [error] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.427.0> (Supervisor.Default) failed to start
** (exit) already started: #PID<0.403.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:10:05.279 [error] Child 143445661349222788694137414513524442515 of Supervisor KeyValCluster.AccountSupervisor.ProcessesSupervisor failed to start
** (exit) shutdown: failed to start child: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}
    ** (EXIT) already started: #PID<0.403.0>
Start Call: KeyValCluster.Account.start_link("B4")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:10:05.279 [error] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.429.0> (Supervisor.Default) failed to start
** (exit) already started: #PID<0.403.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:10:05.279 [error] Child 143445661349222788694137414513524442515 of Supervisor KeyValCluster.AccountSupervisor.ProcessesSupervisor failed to start
** (exit) shutdown: failed to start child: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}
    ** (EXIT) already started: #PID<0.403.0>
Start Call: KeyValCluster.Account.start_link("B4")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:10:05.279 [error] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.431.0> (Supervisor.Default) failed to start
** (exit) already started: #PID<0.403.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:10:05.279 [error] Child 143445661349222788694137414513524442515 of Supervisor KeyValCluster.AccountSupervisor.ProcessesSupervisor failed to start
** (exit) shutdown: failed to start child: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}
    ** (EXIT) already started: #PID<0.403.0>
Start Call: KeyValCluster.Account.start_link("B4")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:10:05.280 [error] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.433.0> (Supervisor.Default) failed to start
** (exit) already started: #PID<0.403.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:10:05.280 [error] Child 143445661349222788694137414513524442515 of Supervisor KeyValCluster.AccountSupervisor.ProcessesSupervisor failed to start
** (exit) shutdown: failed to start child: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}
    ** (EXIT) already started: #PID<0.403.0>
Start Call: KeyValCluster.Account.start_link("B4")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:10:05.280 [error] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.435.0> (Supervisor.Default) failed to start
** (exit) already started: #PID<0.403.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:10:05.280 [error] Child 143445661349222788694137414513524442515 of Supervisor KeyValCluster.AccountSupervisor.ProcessesSupervisor failed to start
** (exit) shutdown: failed to start child: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}
    ** (EXIT) already started: #PID<0.403.0>
Start Call: KeyValCluster.Account.start_link("B4")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:10:05.280 [error] Child 143445661349222788694137414513524442515 of Supervisor KeyValCluster.AccountSupervisor.ProcessesSupervisor caused shutdown
** (exit) :reached_max_restart_intensity
Start Call: KeyValCluster.Account.start_link("B4")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:10:05.280 [error] Child KeyValCluster.AccountSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.AccountSupervisor.Supervisor terminated
** (exit) shutdown
Pid: #PID<0.285.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.AccountSupervisor, type: :supervisor, name: KeyValCluster.AccountSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:10:05.280 [error] Child KeyValCluster.AccountSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.AccountSupervisor.Supervisor caused shutdown
** (exit) :reached_max_restart_intensity
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.AccountSupervisor, type: :supervisor, name: KeyValCluster.AccountSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:10:05.278 [error] GenServer {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} terminating
** (stop) killed
Last message: {:EXIT, #PID<0.329.0>, :killed}
State: %DynamicSupervisor{args: {:ok, %{strategy: :one_for_one, period: 5, intensity: 3, max_children: :infinity, extra_arguments: []}}, extra_arguments: [], mod: Supervisor.Default, name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}, strategy: :one_for_one, max_children: :infinity, max_restarts: 3, max_seconds: 5, children: %{#PID<0.405.0> => {{KeyValCluster.Account.Auction, :start_link, ["B4_4436"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}, #PID<0.406.0> => {{KeyValCluster.Account.Auction, :start_link, ["B4_7231"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}, #PID<0.407.0> => {{KeyValCluster.Account.Auction, :start_link, ["B4_9459"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}, #PID<0.408.0> => {{KeyValCluster.Account.Auction, :start_link, ["B4_5015"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}, #PID<0.409.0> => {{KeyValCluster.Account.Auction, :start_link, ["B4_3114"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}}, restarts: []}

15:10:05.280 [error] Process #PID<0.403.0> terminating
** (exit) killed
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.329.0>, #PID<0.328.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.266.0>]
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 987
Stack Size: 28
Reductions: 9413

15:10:05.281 [error] GenServer KeyValCluster.AccountSupervisor terminating
** (stop) exited in: GenServer.call(KeyValCluster.AccountSupervisor.ProcessesSupervisor, {:start_child, {24291157202889155947231995160564315137, {KeyValCluster.Account, :start_link, ["B3"]}, :permanent, 5000, :worker, [KeyValCluster.Account]}}, :infinity)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (horde 0.8.7) lib/horde/dynamic_supervisor_impl.ex:724: anonymous fn/2 in Horde.DynamicSupervisorImpl.add_children/2
    (elixir 1.14.5) lib/enum.ex:1658: Enum."-map/2-lists^map/1-0-"/2
    (horde 0.8.7) lib/horde/dynamic_supervisor_impl.ex:723: Horde.DynamicSupervisorImpl.add_children/2
    (horde 0.8.7) lib/horde/dynamic_supervisor_impl.ex:718: Horde.DynamicSupervisorImpl.add_child/2
    (horde 0.8.7) lib/horde/dynamic_supervisor_impl.ex:457: Horde.DynamicSupervisorImpl.update_process/2
    (horde 0.8.7) lib/horde/dynamic_supervisor_impl.ex:446: Horde.DynamicSupervisorImpl.update_processes/2
    (horde 0.8.7) lib/horde/dynamic_supervisor_impl.ex:367: Horde.DynamicSupervisorImpl.handle_info/2
Last message: {:crdt_update, [{:add, {:process, 24291157202889155947231995160564315137}, {nil, %{id: 24291157202889155947231995160564315137, start: {KeyValCluster.Account, :start_link, ["B3"]}}}}]}
State: %Horde.DynamicSupervisorImpl{name: KeyValCluster.AccountSupervisor, members: %{{KeyValCluster.AccountSupervisor, :"node2@127.0.0.1"} => 1, {KeyValCluster.AccountSupervisor, :"node3@127.0.0.1"} => 1}, members_info: %{{KeyValCluster.AccountSupervisor, :"node2@127.0.0.1"} => %Horde.DynamicSupervisor.Member{status: :alive, name: {KeyValCluster.AccountSupervisor, :"node2@127.0.0.1"}}, {KeyValCluster.AccountSupervisor, :"node3@127.0.0.1"} => %Horde.DynamicSupervisor.Member{status: :alive, name: {KeyValCluster.AccountSupervisor, :"node3@127.0.0.1"}}}, processes_by_id: #Reference<0.2120023336.1685454855.83006>, process_pid_to_id: #Reference<0.2120023336.1685454855.83007>, local_process_count: 5, waiting_for_quorum: [], supervisor_ref_to_name: %{#Reference<0.2120023336.1685323777.84749> => {KeyValCluster.AccountSupervisor, :"node3@127.0.0.1"}, #Reference<0.2120023336.1685323777.86154> => {KeyValCluster.AccountSupervisor, :"node2@127.0.0.1"}}, name_to_supervisor_ref: %{{KeyValCluster.AccountSupervisor, :"node2@127.0.0.1"} => #Reference<0.2120023336.1685323777.86154>, {KeyValCluster.AccountSupervisor, :"node3@127.0.0.1"} => #Reference<0.2120023336.1685323777.84749>}, shutting_down: false, supervisor_options: [name: KeyValCluster.AccountSupervisor, root_name: KeyValCluster.AccountSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto], distribution_strategy: Horde.UniformQuorumDistribution}

15:10:05.285 [error] Process KeyValCluster.AccountSupervisor (#PID<0.284.0>) terminating
** (exit) exited in: GenServer.call(KeyValCluster.AccountSupervisor.ProcessesSupervisor, {:start_child, {24291157202889155947231995160564315137, {KeyValCluster.Account, :start_link, ["B3"]}, :permanent, 5000, :worker, [KeyValCluster.Account]}}, :infinity)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (horde 0.8.7) lib/horde/dynamic_supervisor_impl.ex:724: anonymous fn/2 in Horde.DynamicSupervisorImpl.add_children/2
    (elixir 1.14.5) lib/enum.ex:1658: Enum."-map/2-lists^map/1-0-"/2
    (horde 0.8.7) lib/horde/dynamic_supervisor_impl.ex:723: Horde.DynamicSupervisorImpl.add_children/2
    (horde 0.8.7) lib/horde/dynamic_supervisor_impl.ex:718: Horde.DynamicSupervisorImpl.add_child/2
    (horde 0.8.7) lib/horde/dynamic_supervisor_impl.ex:457: Horde.DynamicSupervisorImpl.update_process/2
    (horde 0.8.7) lib/horde/dynamic_supervisor_impl.ex:446: Horde.DynamicSupervisorImpl.update_processes/2
    (horde 0.8.7) lib/horde/dynamic_supervisor_impl.ex:367: Horde.DynamicSupervisorImpl.handle_info/2
Initial Call: Horde.DynamicSupervisorImpl.init/1
Ancestors: [KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 4
Messages: [{:"$gen_cast", {:relinquish_child_process, 204583353616811321032548466939927979811}}, {:crdt_update, [{:add, {:process, 101699089529340035741991763270051314201}, {nil, %{id: 101699089529340035741991763270051314201, start: {KeyValCluster.Account, :start_link, ["B1"]}}}}]}, {:crdt_update, [{:add, {:process, 321112794877207319862108814070207686525}, {nil, %{id: 321112794877207319862108814070207686525, start: {KeyValCluster.Account, :start_link, ["B5"]}}}}]}, {:"$gen_call", {#PID<0.286.0>, [:alias | #Reference<0.0.36611.2120023336.1685389316.83869>]}, :horde_shutting_down}]
Links: [#PID<0.282.0>]
Dictionary: [rand_seed: {%{type: :exsss, next: #Function<0.65977474/1 in :rand.exsss_next>, bits: 58, uniform: #Function<1.65977474/1 in :rand.exsss_uniform>, uniform_n: #Function<2.65977474/2 in :rand.exsss_uniform>, jump: #Function<3.65977474/1 in :rand.exsplus_jump>}, [13023520733500065 | 173560024510059770]}]
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 260291

15:10:05.285 [error] GenServer #PID<0.286.0> terminating
** (stop) exited in: GenServer.call(KeyValCluster.AccountSupervisor, :horde_shutting_down, 5000)
    ** (EXIT) exited in: GenServer.call(KeyValCluster.AccountSupervisor.ProcessesSupervisor, {:start_child, {24291157202889155947231995160564315137, {KeyValCluster.Account, :start_link, ["B3"]}, :permanent, 5000, :worker, [KeyValCluster.Account]}}, :infinity)
        ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1038: GenServer.call/3
    (horde 0.8.7) lib/horde/signal_shutdown.ex:21: anonymous fn/1 in Horde.SignalShutdown.terminate/2
    (elixir 1.14.5) lib/enum.ex:975: Enum."-each/2-lists^foreach/1-0-"/2
    (stdlib 5.0) gen_server.erl:1125: :gen_server.try_terminate/3
    (stdlib 5.0) gen_server.erl:1321: :gen_server.terminate/10
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Last message: {:EXIT, #PID<0.282.0>, :shutdown}
State: [KeyValCluster.AccountSupervisor]

15:10:05.286 [error] Process #PID<0.286.0> terminating
** (exit) exited in: GenServer.call(KeyValCluster.AccountSupervisor, :horde_shutting_down, 5000)
    ** (EXIT) exited in: GenServer.call(KeyValCluster.AccountSupervisor.ProcessesSupervisor, {:start_child, {24291157202889155947231995160564315137, {KeyValCluster.Account, :start_link, ["B3"]}, :permanent, 5000, :worker, [KeyValCluster.Account]}}, :infinity)
        ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1038: GenServer.call/3
    (horde 0.8.7) lib/horde/signal_shutdown.ex:21: anonymous fn/1 in Horde.SignalShutdown.terminate/2
    (elixir 1.14.5) lib/enum.ex:975: Enum."-each/2-lists^foreach/1-0-"/2
    (stdlib 5.0) gen_server.erl:1125: :gen_server.try_terminate/3
    (stdlib 5.0) gen_server.erl:1321: :gen_server.terminate/10
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: Horde.SignalShutdown.init/1
Ancestors: [KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.282.0>]
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 2586
Stack Size: 28
Reductions: 5246

15:10:05.286 [error] Child Horde.SignalShutdown of Supervisor KeyValCluster.AccountSupervisor.Supervisor shut down abnormally
** (exit) exited in: GenServer.call(KeyValCluster.AccountSupervisor, :horde_shutting_down, 5000)
    ** (EXIT) exited in: GenServer.call(KeyValCluster.AccountSupervisor.ProcessesSupervisor, {:start_child, {24291157202889155947231995160564315137, {KeyValCluster.Account, :start_link, ["B3"]}, :permanent, 5000, :worker, [KeyValCluster.Account]}}, :infinity)
        ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Pid: #PID<0.286.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.AccountSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:10:05.286 [error] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.AccountSupervisor.Supervisor shut down abnormally
** (exit) exited in: GenServer.call(KeyValCluster.AccountSupervisor.ProcessesSupervisor, {:start_child, {24291157202889155947231995160564315137, {KeyValCluster.Account, :start_link, ["B3"]}, :permanent, 5000, :worker, [KeyValCluster.Account]}}, :infinity)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Pid: #PID<0.284.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.AccountSupervisor, root_name: KeyValCluster.AccountSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:10:05.286 [error] Child KeyValCluster.AccountSupervisor of Supervisor KeyValCluster.Supervisor terminated
** (exit) shutdown
Pid: #PID<0.282.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.AccountSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:10:05.286 [info] Child KeyValCluster.AccountSupervisor.Crdt of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.440.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.AccountSupervisor]}, name: KeyValCluster.AccountSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:10:05.286 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.AccountSupervisor

15:10:05.287 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.441.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.AccountSupervisor, root_name: KeyValCluster.AccountSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:10:05.287 [info] Child KeyValCluster.AccountSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.442.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.AccountSupervisor, type: :supervisor, name: KeyValCluster.AccountSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:10:05.287 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.443.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.AccountSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:10:05.287 [info] Child KeyValCluster.AccountSupervisor_telemetry_poller of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.444.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.AccountSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.AccountSupervisor]}], period: 5000, name: KeyValCluster.AccountSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:10:05.287 [info] Child Horde.NodeListener of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.445.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.AccountSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:10:05.287 [info] Child KeyValCluster.AccountSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.439.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.AccountSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
Type: :supervisor
Type: :supervisor
** (SyntaxError) iex:1:1: syntax error before: 'Type'
    |
  1 | Type: :supervisor
    | ^
    (iex 1.14.5) lib/iex/evaluator.ex:292: IEx.Evaluator.parse_eval_inspect/3
    (iex 1.14.5) lib/iex/evaluator.ex:187: IEx.Evaluator.loop/1
    (iex 1.14.5) lib/iex/evaluator.ex:32: IEx.Evaluator.init/4
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
iex(node3@127.0.0.1)1> 
15:12:49.099 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.462.0> (Supervisor.Default) started
Pid: #PID<0.463.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B2"

15:12:49.099 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} of Supervisor #PID<0.462.0> (Supervisor.Default) started
Pid: #PID<0.464.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B2_4436"
"B2_7231"
"B2_9459"
"B2_5015"
"B2_3114"

15:12:51.387 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.471.0> (Supervisor.Default) started
Pid: #PID<0.472.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B3"

15:12:51.387 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.471.0> (Supervisor.Default) started
Pid: #PID<0.473.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3_4436"
"B3_7231"
"B3_9459"
"B3_5015"
"B3_3114"

15:12:56.102 [error] Child 112764566210264712677125157996460633814 of Supervisor KeyValCluster.AccountSupervisor.ProcessesSupervisor terminated
** (exit) killed
Pid: #PID<0.461.0>
Start Call: KeyValCluster.Account.start_link("B2")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:12:56.102 [error] GenServer {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} terminating
** (stop) killed
Last message: {:EXIT, #PID<0.462.0>, :killed}
State: %DynamicSupervisor{args: {:ok, %{strategy: :one_for_one, period: 5, intensity: 3, max_children: :infinity, extra_arguments: []}}, extra_arguments: [], mod: Supervisor.Default, name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}, strategy: :one_for_one, max_children: :infinity, max_restarts: 3, max_seconds: 5, children: %{#PID<0.465.0> => {{KeyValCluster.Account.Auction, :start_link, ["B2_4436"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}, #PID<0.466.0> => {{KeyValCluster.Account.Auction, :start_link, ["B2_7231"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}, #PID<0.467.0> => {{KeyValCluster.Account.Auction, :start_link, ["B2_9459"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}, #PID<0.468.0> => {{KeyValCluster.Account.Auction, :start_link, ["B2_5015"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}, #PID<0.469.0> => {{KeyValCluster.Account.Auction, :start_link, ["B2_3114"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}}, restarts: []}

15:12:56.103 [error] Process #PID<0.463.0> terminating
** (exit) killed
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.462.0>, #PID<0.461.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.266.0>]
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 4185
Stack Size: 28
Reductions: 9431

15:12:56.103 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.480.0> (Supervisor.Default) started
Pid: #PID<0.481.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B2"

15:12:56.103 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} of Supervisor #PID<0.480.0> (Supervisor.Default) started
Pid: #PID<0.482.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B2_4436"
"B2_7231"
"B2_9459"
"B2_5015"
"B2_3114"

15:12:59.345 [error] Child 80245817086711635384220901225595365719 of Supervisor KeyValCluster.AccountSupervisor.ProcessesSupervisor terminated
** (exit) killed
Pid: #PID<0.470.0>
Start Call: KeyValCluster.Account.start_link("B3")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:12:59.345 [error] GenServer {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} terminating
** (stop) killed
Last message: {:EXIT, #PID<0.471.0>, :killed}
State: %DynamicSupervisor{args: {:ok, %{strategy: :one_for_one, period: 5, intensity: 3, max_children: :infinity, extra_arguments: []}}, extra_arguments: [], mod: Supervisor.Default, name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}, strategy: :one_for_one, max_children: :infinity, max_restarts: 3, max_seconds: 5, children: %{#PID<0.474.0> => {{KeyValCluster.Account.Auction, :start_link, ["B3_4436"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}, #PID<0.475.0> => {{KeyValCluster.Account.Auction, :start_link, ["B3_7231"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}, #PID<0.476.0> => {{KeyValCluster.Account.Auction, :start_link, ["B3_9459"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}, #PID<0.477.0> => {{KeyValCluster.Account.Auction, :start_link, ["B3_5015"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}, #PID<0.478.0> => {{KeyValCluster.Account.Auction, :start_link, ["B3_3114"]}, :permanent, 5000, :worker, [KeyValCluster.Account.Auction]}}, restarts: []}

15:12:59.345 [error] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.489.0> (Supervisor.Default) failed to start
** (exit) already started: #PID<0.472.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:12:59.345 [error] Process #PID<0.472.0> terminating
** (exit) killed
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.471.0>, #PID<0.470.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.266.0>]
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 4185
Stack Size: 28
Reductions: 9438

15:12:59.345 [error] Child 80245817086711635384220901225595365719 of Supervisor KeyValCluster.AccountSupervisor.ProcessesSupervisor failed to start
** (exit) shutdown: failed to start child: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}
    ** (EXIT) already started: #PID<0.472.0>
Start Call: KeyValCluster.Account.start_link("B3")
Restart: :permanent
Shutdown: 5000
Type: :worker
"B3"

15:12:59.345 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.491.0> (Supervisor.Default) started
Pid: #PID<0.492.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B3_4436"

15:12:59.345 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.491.0> (Supervisor.Default) started
Pid: #PID<0.493.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3_7231"
"B3_9459"
"B3_5015"
"B3_3114"

15:13:02.190 [error] Child 112764566210264712677125157996460633814 of Supervisor KeyValCluster.AccountSupervisor.ProcessesSupervisor terminated
** (exit) killed
Pid: #PID<0.479.0>
Start Call: KeyValCluster.Account.start_link("B2")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:13:02.190 [error] GenServer #PID<0.480.0> terminating
** (stop) killed
Last message: {:EXIT, #PID<0.479.0>, :killed}
State: {:state, {#PID<0.480.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} => {:child, #PID<0.481.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} => {:child, :undefined, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}}, {Task, :start_link, [#Function<0.56339264/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{strategy: :rest_for_one, period: 5, intensity: 3}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.56339264/0 in KeyValCluster.Account.init/1>]}}]}}}

15:13:02.191 [error] Process #PID<0.480.0> terminating
** (exit) killed
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.479.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 16248

15:13:02.191 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.500.0> (Supervisor.Default) started
Pid: #PID<0.501.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B2"

15:13:02.191 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} of Supervisor #PID<0.500.0> (Supervisor.Default) started
Pid: #PID<0.502.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B2_4436"
"B2_7231"
"B2_9459"
"B2_5015"
"B2_3114"
"B2_9459"
"B2_9459"
"B2_9459"
iex(node3@127.0.0.1)2> recomiple
recomiple
warning: variable "recomiple" does not exist and is being expanded to "recomiple()", please use parentheses to remove the ambiguity or change the variable name
  iex:2

** (CompileError) iex:2: undefined function recomiple/0 (there is no such import)
    (elixir 1.14.5) src/elixir.erl:379: :elixir.quoted_to_erl/4
    (elixir 1.14.5) src/elixir.erl:280: :elixir.eval_forms/4
    (elixir 1.14.5) lib/module/parallel_checker.ex:110: Module.ParallelChecker.verify/1
    (iex 1.14.5) lib/iex/evaluator.ex:329: IEx.Evaluator.eval_and_inspect/3
    (iex 1.14.5) lib/iex/evaluator.ex:303: IEx.Evaluator.eval_and_inspect_parsed/3
    (iex 1.14.5) lib/iex/evaluator.ex:292: IEx.Evaluator.parse_eval_inspect/3
    (iex 1.14.5) lib/iex/evaluator.ex:187: IEx.Evaluator.loop/1
iex(node3@127.0.0.1)2> recompile
recompile
:noop
iex(node3@127.0.0.1)3> :observer.start
:observer.start

15:13:18.179 [info] Child :timer_server of Supervisor :kernel_sup started
Pid: #PID<0.545.0>
Start Call: :timer.start_link()
Restart: :permanent
Shutdown: 1000
Type: :worker

(Erlang:69937): Gtk-CRITICAL **: 15:13:18.336: gtk_box_gadget_distribute: assertion 'size >= 0' failed in GtkScrollbar

(Erlang:69937): Gtk-CRITICAL **: 15:13:18.336: gtk_box_gadget_distribute: assertion 'size >= 0' failed in GtkScrollbar

(Erlang:69937): Gtk-CRITICAL **: 15:13:18.337: gtk_box_gadget_distribute: assertion 'size >= 0' failed in GtkScrollbar

(Erlang:69937): Gtk-CRITICAL **: 15:13:18.337: gtk_box_gadget_distribute: assertion 'size >= 0' failed in GtkScrollbar

(Erlang:69937): Gtk-CRITICAL **: 15:13:18.337: gtk_box_gadget_distribute: assertion 'size >= 0' failed in GtkScrollbar

(Erlang:69937): Gtk-CRITICAL **: 15:13:18.338: gtk_box_gadget_distribute: assertion 'size >= 0' failed in GtkScrollbar
:ok
iex(node3@127.0.0.1)4> 
(Erlang:69937): Gtk-WARNING **: 15:13:18.356: Drawing a gadget with negative dimensions. Did you forget to allocate a size? (node tab owner GtkNotebook)

(Erlang:69937): Gtk-WARNING **: 15:13:18.364: Drawing a gadget with negative dimensions. Did you forget to allocate a size? (node tab owner GtkNotebook)

15:13:33.362 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}} of Supervisor #PID<0.10173.0> (Supervisor.Default) started
Pid: #PID<0.10174.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B1"

15:13:33.362 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B1"}}} of Supervisor #PID<0.10173.0> (Supervisor.Default) started
Pid: #PID<0.10175.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B1_4436"
"B1_7231"
"B1_9459"
"B1_5015"
"B1_3114"

15:13:33.365 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B5"}} of Supervisor #PID<0.10178.0> (Supervisor.Default) started
Pid: #PID<0.10179.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B5"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B5"

15:13:33.365 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B5"}}} of Supervisor #PID<0.10178.0> (Supervisor.Default) started
Pid: #PID<0.10181.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B5_4436"
"B5_7231"
"B5_9459"
"B5_5015"
"B5_3114"

15:16:59.407 [error] ** wx object server #PID<0.549.0> terminating 
** Last message in was {:active, :"node2@127.0.0.1"}
** When Server state == {:state, #PID<0.539.0>, {:wx_ref, 450, :wxPanel, []},
 {:wx_ref, 453, :wxListBox, []}, {:wx_ref, 456, :wxScrolledWindow, []},
 {:paint, {:wx_ref, 465, :wxFont, []}, {61, 61, 61, 255},
  {:wx_ref, 467, :wxPen, []}, {:wx_ref, 466, :wxBrush, []},
  {:wx_ref, 468, :wxBrush, []}, {:wx_ref, 469, :wxPen, []}}, :key_val_cluster,
 {:app,
  {{:box, 16, 382, 112, 27, {:str, 5, 5, '<18677.254.0>', #PID<18677.254.0>}},
   [
     {{:box, 144, 382, 112, 27,
       {:str, 5, 5, '<18677.255.0>', #PID<18677.255.0>}},
      [
        {{:box, 272, 382, 208, 27,
          {:str, 5, 5, 'Elixir.KeyValCluster.Supervisor', #PID<18677.256.0>}},
         [
           {{:box, 496, 12, 112, 27,
             {:str, 5, 5, '<18677.257.0>', #PID<18677.257.0>}}, []},
           {{:box, 496, 109, 332, 27,
             {:str, 5, 5, 'Elixir.KeyValCluster.AccountSupervisor.Supervisor',
              #PID<18677.2345.0>}},
            [
              {{:box, 844, 12, 120, 27,
                {:str, 5, 5, '<18677.2350.0>', #PID<18677.2350.0>}}, []},
              {{:box, 844, 51, 260, 27,
                {:str, 5, 5, 'Elixir.KeyValCluster.AccountSupervisor',
                 #PID<18677.2348.0>}}, []},
              {{:box, 844, 90, 290, 27,
                {:str, 5, 5, 'Elixir.KeyValCluster.AccountSupervisor.Crdt',
                 #PID<18677.2346.0>}}, []},
              {{:box, 844, 129, 349, 27,
                {:str, 5, 5,
                 'Elixir.KeyValCluster.AccountSupervisor.NodeListener',
                 #PID<18677.2352.0>}}, []},
              {{:box, 844, 168, 397, 27,
                {:str, 5, 5,
                 'Elixir.KeyValCluster.AccountSupervisor.ProcessesSupervisor',
                 #PID<18677.2349.0>}}, []},
              {{:box, 844, 207, 375, 27,
                {:str, 5, 5,
                 'Elixir.KeyValCluster.AccountSupervisor_telemetry_poller',
                 #PID<18677.2351.0>}}, []}
            ]},
           {{:box, 496, 343, 299, 27,
             {:str, 5, 5, 'Elixir.KeyValCluster.DBSupervisor.Supervisor',
              #PID<18677.276.0>}},
            [
              {{:box, 844, 246, 112, 27,
                {:str, 5, 5, '<18677.280.0>', #PID<18677.280.0>}}, []},
              {{:box, 844, 285, 227, 27,
                {:str, 5, 5, 'Elixir.KeyValCluster.DBSupervisor',
                 #PID<18677.278.0>}}, []},
              {{:box, 844, 324, 257, 27,
                {:str, 5, 5, 'Elixir.KeyValCluster.DBSupervisor.Crdt',
                 #PID<18677.277.0>}}, []},
              {{:box, 844, 363, 316, 27,
                {:str, 5, 5, 'Elixir.KeyValCluster.DBSupervisor.NodeListener',
                 #PID<18677.282.0>}}, []},
              {{:box, 844, 402, 364, 27,
                {:str, 5, 5,
                 'Elixir.KeyValCluster.DBSupervisor.ProcessesSupervisor',
                 #PID<18677.279.0>}}, []},
              {{:box, 844, 441, 342, 27,
                {:str, 5, 5,
                 'Elixir.KeyValCluster.DBSupervisor_telemetry_poller',
                 #PID<18677.281.0>}}, []}
            ]},
           {{:box, 496, 577, 324, 27,
             {:str, 5, 5, 'Elixir.KeyValCluster.KeyValSupervisor.Supervisor',
              #PID<18677.269.0>}},
            [
              {{:box, 844, 480, 112, 27,
                {:str, 5, 5, '<18677.273.0>', #PID<18677.273.0>}}, []},
              {{:box, 844, 519, 252, 27,
                {:str, 5, 5, 'Elixir.KeyValCluster.KeyValSupervisor',
                 #PID<18677.271.0>}}, []},
              {{:box, 844, 558, 282, 27,
                {:str, 5, 5, 'Elixir.KeyValCluster.KeyValSupervisor.Crdt',
                 #PID<18677.270.0>}}, []},
              {{:box, 844, 597, 341, 27,
                {:str, 5, 5,
                 'Elixir.KeyValCluster.KeyValSupervisor.NodeListener',
                 #PID<18677.275.0>}}, []},
              {{:box, 844, 636, 389, 27,
                {:str, 5, 5,
                 'Elixir.KeyValCluster.KeyValSupervisor.ProcessesSupervisor',
                 #PID<18677.272.0>}}, []},
              {{:box, 844, 675, 367, 27,
                {:str, 5, 5,
                 'Elixir.KeyValCluster.KeyValSupervisor_telemetry_poller',
                 #PID<18677.274.0>}}, []}
            ]},
           {{:box, 496, 753, 264, 27,
             {:str, 5, 5, 'Elixir.KeyValCluster.Registry.Supervisor',
              #PID<18677.264.0>}},
            [
              {{:box, 844, 714, 193, 27,
                {:str, 5, 5, 'Elixir.KeyValCluster.Registry', #PID<18677.267.0>}},
               []},
              {{:box, 844, 753, 222, 27,
                {:str, 5, 5, 'Elixir.KeyValCluster.Registry.Crdt',
                 #PID<18677.266.0>}}, []},
              {{:box, 844, 792, 281, 27,
                {:str, 5, 5, 'Elixir.KeyValCluster.Registry.NodeListener',
                 #PID<18677.268.0>}}, []}
            ]}
         ]}
      ]}
   ]}, :undefined, [], {1257, 831}}, :undefined, :undefined, true}
** Reason for termination == 
** {{:badmatch,
  {:badrpc,
   {:EXIT,
    {:normal,
     {:gen_server, :call,
      [#PID<18677.2339.0>, {:register_client, #PID<0.549.0>}]}}}}},
 [
   {:observer_app_wx, :handle_info, 2, [file: 'observer_app_wx.erl', line: 290]},
   {:wx_object, :handle_msg, 5, [file: 'wx_object.erl', line: 493]},
   {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 241]}
 ]}

Observer: Child (app_panel) crashed exiting:  <0.549.0> {{badmatch,
                                                          {badrpc,
                                                           {'EXIT',
                                                            {normal,
                                                             {gen_server,
                                                              call,
                                                              [<18677.2339.0>,
                                                               {register_client,
                                                                <0.549.0>}]}}}}},
                                                         [{observer_app_wx,
                                                           handle_info,2,
                                                           [{file,
                                                             "observer_app_wx.erl"},
                                                            {line,290}]},
                                                          {wx_object,
                                                           handle_msg,5,
                                                           [{file,
                                                             "wx_object.erl"},
                                                            {line,493}]},
                                                          {proc_lib,
                                                           init_p_do_apply,3,
                                                           [{file,
                                                             "proc_lib.erl"},
                                                            {line,241}]}]}

15:16:59.412 [error] Process #PID<0.549.0> terminating
** (exit) an exception was raised:
    ** (MatchError) no match of right hand side value: {:badrpc, {:EXIT, {:normal, {:gen_server, :call, [#PID<18677.2339.0>, {:register_client, #PID<0.549.0>}]}}}}
        observer_app_wx.erl:290: :observer_app_wx.handle_info/2
        wx_object.erl:493: :wx_object.handle_msg/5
        (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
    wx_object.erl:624: :wx_object.terminate/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: :observer_app_wx.init/1
Ancestors: [:observer, #PID<0.290.0>, #PID<0.91.0>]
Message Queue Length: 1
Messages: [{:EXIT, #PID<18677.2339.0>, :normal}]
Links: [#PID<0.561.0>, #PID<0.539.0>]
Dictionary: [_wx_object_: {:observer_app_wx, {:state, #PID<0.539.0>, {:wx_ref, 450, :wxPanel, []}, {:wx_ref, 453, :wxListBox, []}, {:wx_ref, 456, :wxScrolledWindow, []}, {:paint, {:wx_ref, 465, :wxFont, []}, {61, 61, 61, 255}, {:wx_ref, 467, :wxPen, []}, {:wx_ref, 466, :wxBrush, []}, {:wx_ref, 468, :wxBrush, []}, {:wx_ref, 469, :wxPen, []}}, :key_val_cluster, {:app, {{:box, 16, 382, 112, 27, {:str, 5, 5, '<18677.254.0>', #PID<18677.254.0>}}, [{{:box, 144, 382, 112, 27, {:str, 5, 5, '<18677.255.0>', #PID<18677.255.0>}}, [{{:box, 272, 382, 208, 27, {:str, 5, 5, 'Elixir.KeyValCluster.Supervisor', #PID<18677.256.0>}}, [{{:box, 496, 12, 112, 27, {:str, 5, 5, '<18677.257.0>', #PID<18677.257.0>}}, []}, {{:box, 496, 109, 332, 27, {:str, 5, 5, 'Elixir.KeyValCluster.AccountSupervisor.Supervisor', #PID<18677.2345.0>}}, [{{:box, 844, 12, 120, 27, {:str, 5, 5, '<18677.2350.0>', #PID<18677.2350.0>}}, []}, {{:box, 844, 51, 260, 27, {:str, 5, 5, 'Elixir.KeyValCluster.AccountSupervisor', #PID<18677.2348.0>}}, []}, {{:box, 844, 90, 290, 27, {:str, 5, 5, 'Elixir.KeyValCluster.AccountSupervisor.Crdt', #PID<18677.2346.0>}}, []}, {{:box, 844, 129, 349, 27, {:str, 5, 5, 'Elixir.KeyValCluster.AccountSupervisor.NodeListener', #PID<18677.2352.0>}}, []}, {{:box, 844, 168, 397, 27, {:str, 5, 5, 'Elixir.KeyValCluster.AccountSupervisor.ProcessesSupervisor', #PID<18677.2349.0>}}, []}, {{:box, 844, 207, 375, 27, {:str, 5, 5, 'Elixir.KeyValCluster.AccountSupervisor_telemetry_poller', #PID<18677.2351.0>}}, []}]}, {{:box, 496, 343, 299, 27, {:str, 5, 5, 'Elixir.KeyValCluster.DBSupervisor.Supervisor', #PID<18677.276.0>}}, [{{:box, 844, 246, 112, 27, {:str, 5, 5, '<18677.280.0>', #PID<18677.280.0>}}, []}, {{:box, 844, 285, 227, 27, {:str, 5, 5, 'Elixir.KeyValCluster.DBSupervisor', #PID<18677.278.0>}}, []}, {{:box, 844, 324, 257, 27, {:str, 5, 5, 'Elixir.KeyValCluster.DBSupervisor.Crdt', #PID<18677.277.0>}}, []}, {{:box, 844, 363, 316, 27, {:str, 5, 5, 'Elixir.KeyValCluster.DBSupervisor.NodeListener', #PID<18677.282.0>}}, []}, {{:box, 844, 402, 364, 27, {:str, 5, 5, 'Elixir.KeyValCluster.DBSupervisor.ProcessesSupervisor', #PID<18677.279.0>}}, []}, {{:box, 844, 441, 342, 27, {:str, 5, 5, 'Elixir.KeyValCluster.DBSupervisor_telemetry_poller', #PID<18677.281.0>}}, []}]}, {{:box, 496, 577, 324, 27, {:str, 5, 5, 'Elixir.KeyValCluster.KeyValSupervisor.Supervisor', #PID<18677.269.0>}}, [{{:box, 844, 480, 112, 27, {:str, 5, 5, '<18677.273.0>', #PID<18677.273.0>}}, []}, {{:box, 844, 519, 252, 27, {:str, 5, 5, 'Elixir.KeyValCluster.KeyValSupervisor', #PID<18677.271.0>}}, []}, {{:box, 844, 558, 282, 27, {:str, 5, 5, 'Elixir.KeyValCluster.KeyValSupervisor.Crdt', #PID<18677.270.0>}}, []}, {{:box, 844, 597, 341, 27, {:str, 5, 5, 'Elixir.KeyValCluster.KeyValSupervisor.NodeListener', #PID<18677.275.0>}}, []}, {{:box, 844, 636, 389, 27, {:str, 5, 5, 'Elixir.KeyValCluster.KeyValSupervisor.ProcessesSupervisor', #PID<18677.272.0>}}, []}, {{:box, 844, 675, 367, 27, {:str, 5, 5, 'Elixir.KeyValCluster.KeyValSupervisor_telemetry_poller', #PID<18677.274.0>}}, []}]}, {{:box, 496, 753, 264, 27, {:str, 5, 5, 'Elixir.KeyValCluster.Registry.Supervisor', #PID<18677.264.0>}}, [{{:box, 844, 714, 193, 27, {:str, 5, 5, 'Elixir.KeyValCluster.Registry', #PID<18677.267.0>}}, []}, {{:box, 844, 753, 222, 27, {:str, 5, 5, 'Elixir.KeyValCluster.Registry.Crdt', #PID<18677.266.0>}}, []}, {{:box, 844, 792, 281, 27, {:str, 5, 5, 'Elixir.KeyValCluster.Registry.NodeListener', #PID<18677.268.0>}}, []}]}]}]}]}, :undefined, [], {1257, 831}}, :undefined, :undefined, true}}, wx_env: {:wx_env, #Reference<0.2120023336.1685454849.94563>, #PID<0.540.0>, 0}]
Trapping Exits: true
Status: :running
Heap Size: 10958
Stack Size: 28
Reductions: 130389

15:16:59.421 [error] GenServer :appmon_info terminating
** (MatchError) no match of right hand side value: {:badrpc, {:EXIT, {:normal, {:gen_server, :call, [#PID<18677.2339.0>, {:register_client, #PID<0.549.0>}]}}}}
    observer_app_wx.erl:290: :observer_app_wx.handle_info/2
    wx_object.erl:493: :wx_object.handle_msg/5
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Last message: {:EXIT, #PID<0.549.0>, {{:badmatch, {:badrpc, {:EXIT, {:normal, {:gen_server, :call, [#PID<18677.2339.0>, {:register_client, #PID<0.549.0>}]}}}}}, [{:observer_app_wx, :handle_info, 2, [file: 'observer_app_wx.erl', line: 290]}, {:wx_object, :handle_msg, 5, [file: 'wx_object.erl', line: 493]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 241]}]}}
State: {:state, #PID<0.549.0>, [], #Reference<0.2120023336.1685454849.94908>, [#PID<0.549.0>]}

15:16:59.422 [error] Process :appmon_info (#PID<0.561.0>) terminating
** (exit) an exception was raised:
    ** (MatchError) no match of right hand side value: {:badrpc, {:EXIT, {:normal, {:gen_server, :call, [#PID<18677.2339.0>, {:register_client, #PID<0.549.0>}]}}}}
        observer_app_wx.erl:290: :observer_app_wx.handle_info/2
        wx_object.erl:493: :wx_object.handle_msg/5
        (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
    (stdlib 5.0) gen_server.erl:1208: :gen_server.handle_common_reply/8
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: :appmon_info.init/1
Ancestors: [#PID<0.549.0>, :observer, #PID<0.290.0>, #PID<0.91.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 10958
Stack Size: 28
Reductions: 1009536
Links: []
Links: []
** (SyntaxError) iex:4:1: syntax error before: 'Links'
    |
  4 | Links: []
    | ^
    (iex 1.14.5) lib/iex/evaluator.ex:292: IEx.Evaluator.parse_eval_inspect/3
    (iex 1.14.5) lib/iex/evaluator.ex:187: IEx.Evaluator.loop/1
    (iex 1.14.5) lib/iex/evaluator.ex:32: IEx.Evaluator.init/4
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
iex(node3@127.0.0.1)4> recompile
recompile
Compiling 1 file (.ex)
warning: variable "value" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/account.ex:104: KeyValCluster.Account.handle_cast/2

warning: variable "account_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/account.ex:109: KeyValCluster.Account.handle_call/3

warning: variable "value" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/account.ex:113: KeyValCluster.Account.handle_cast/2

warning: clauses with the same name and arity (number of arguments) should be grouped together, "def handle_cast/2" was previously defined (lib/account.ex:104)
  lib/account.ex:113

warning: function via_tuple2/1 is unused
  lib/account.ex:12

warning: :random.uniform/1 is deprecated. Use the 'rand' module instead
Invalid call found at 5 locations:
  lib/account.ex:55: KeyValCluster.Account.init/1
  lib/account.ex:56: KeyValCluster.Account.init/1
  lib/account.ex:57: KeyValCluster.Account.init/1
  lib/account.ex:58: KeyValCluster.Account.init/1
  lib/account.ex:59: KeyValCluster.Account.init/1

:ok
iex(node3@127.0.0.1)5> :observer.start
:observer.start
:ok
iex(node3@127.0.0.1)6> 
(Erlang:69937): Gtk-WARNING **: 15:17:16.784: Drawing a gadget with negative dimensions. Did you forget to allocate a size? (node tab owner GtkNotebook)

(Erlang:69937): Gtk-WARNING **: 15:17:16.799: Drawing a gadget with negative dimensions. Did you forget to allocate a size? (node tab owner GtkNotebook)

15:17:28.962 [error] Child :undefined of Supervisor {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}} terminated
** (exit) killed
Pid: #PID<0.10176.0>
Start Call: KeyValCluster.Account.Auction.start_link("B1_4436")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:17:31.795 [error] Child :undefined of Supervisor {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}} terminated
** (exit) killed
Pid: #PID<0.10183.0>
Start Call: KeyValCluster.Account.Auction.start_link("B1_5015")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:17:34.620 [error] Child :undefined of Supervisor {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}} terminated
** (exit) killed
Pid: #PID<0.10185.0>
Start Call: KeyValCluster.Account.Auction.start_link("B1_3114")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:17:38.511 [error] Child :undefined of Supervisor {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} terminated
** (exit) killed
Pid: #PID<0.494.0>
Start Call: KeyValCluster.Account.Auction.start_link("B3_4436")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:17:42.689 [error] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.491.0> (Supervisor.Default) terminated
** (exit) killed
Pid: #PID<0.492.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:17:42.690 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.491.0> (Supervisor.Default) started
Pid: #PID<0.12459.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B3"

15:17:42.690 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.491.0> (Supervisor.Default) started
Pid: #PID<0.12460.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3_4436"
"B3_7231"
"B3_9459"
"B3_5015"
"B3_3114"

15:28:17.410 [error] Child :undefined of Supervisor {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B5"}} terminated
** (exit) killed
Pid: #PID<0.10188.0>
Start Call: KeyValCluster.Account.Auction.start_link("B5_9459")
Restart: :permanent
Shutdown: 5000
Type: :worker
  C-c C-c^C
BREAK: (a)bort (A)bort with dump (c)ontinue (p)roc info (i)nfo
       (l)oaded (v)ersion (k)ill (D)b-tables (d)istribution
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●) 
$ 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●) 
$ iex --name node3@127.0.0.1 --cookie mycookie -S mix
iex --name node3@127.0.0.1 --cookie mycookie -S mix
Erlang/OTP 26 [erts-14.0] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]

warning: use Mix.Config is deprecated. Use the Config module instead
  config/config.exs:1


15:28:49.818 [info] Child :disk_log_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.212.0>
Start Call: :disk_log_sup.start_link()
Restart: :permanent
Shutdown: 1000
Type: :supervisor

15:28:49.828 [info] Child :disk_log_server of Supervisor :kernel_safe_sup started
Pid: #PID<0.213.0>
Start Call: :disk_log_server.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker

15:28:49.842 [info] Application logger started at :"node3@127.0.0.1"

15:28:49.846 [info] Child :telemetry_handler_table of Supervisor :telemetry_sup started
Pid: #PID<0.236.0>
Start Call: :telemetry_handler_table.start_link()
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.846 [info] Application telemetry started at :"node3@127.0.0.1"

15:28:49.846 [info] Application merkle_map started at :"node3@127.0.0.1"

15:28:49.846 [info] Application delta_crdt started at :"node3@127.0.0.1"

15:28:49.851 [info] Application libring started at :"node3@127.0.0.1"

15:28:49.853 [info] Child :telemetry_poller_default of Supervisor :telemetry_poller_sup started
Pid: #PID<0.248.0>
Start Call: :telemetry_poller.start_link([name: :telemetry_poller_default, measurements: [:memory, :total_run_queue_lengths, :system_counts]])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.854 [info] Application telemetry_poller started at :"node3@127.0.0.1"

15:28:49.854 [info] Application horde started at :"node3@127.0.0.1"

15:28:49.855 [info] Application jason started at :"node3@127.0.0.1"

15:28:49.855 [info] Application libcluster started at :"node3@127.0.0.1"

15:28:49.855 [info] Application cubdb started at :"node3@127.0.0.1"

15:28:49.865 [info] Child of Supervisor :inet_gethost_native_sup started
Pid: #PID<0.259.0>
Start Call: :inet_gethost_native.init([])

15:28:49.865 [info] Child :inet_gethost_native_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.258.0>
Start Call: :inet_gethost_native.start_link()
Restart: :temporary
Shutdown: 1000
Type: :worker

15:28:49.868 [warning] [libcluster:cluster] unable to connect to :"node1@127.0.0.1"

15:28:49.870 [info] [libcluster:cluster] connected to :"node2@127.0.0.1"

15:28:49.870 [info] Child Cluster.Supervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.257.0>
Start Call: Cluster.Supervisor.start_link([[cluster: [strategy: Cluster.Strategy.Epmd, config: [hosts: [:"node1@127.0.0.1", :"node2@127.0.0.1", :"node3@127.0.0.1"]]]]])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:28:49.879 [info] Child KeyValCluster.Registry.Crdt of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.266.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.RegistryImpl, :on_diffs, [KeyValCluster.Registry]}, name: KeyValCluster.Registry.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:28:49.881 [info] Starting Horde.RegistryImpl with name KeyValCluster.Registry

15:28:49.884 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.267.0>
Start Call: Horde.RegistryImpl.start_link([name: KeyValCluster.Registry, listeners: [], meta: nil, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.884 [info] Child Horde.NodeListener of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.268.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.Registry)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.884 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.265.0>
Start Call: Horde.Registry.start_link([name: KeyValCluster.Registry, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:28:49.891 [info] Child KeyValCluster.KeyValSupervisor.Crdt of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.270.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.KeyValSupervisor]}, name: KeyValCluster.KeyValSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:28:49.891 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.KeyValSupervisor

15:28:49.892 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.271.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.KeyValSupervisor, root_name: KeyValCluster.KeyValSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 100000, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.892 [info] Child KeyValCluster.KeyValSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.272.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.KeyValSupervisor, type: :supervisor, name: KeyValCluster.KeyValSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 100000, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:28:49.892 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.273.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.KeyValSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.892 [info] Child KeyValCluster.KeyValSupervisor_telemetry_poller of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.274.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.KeyValSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.KeyValSupervisor]}], period: 5000, name: KeyValCluster.KeyValSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.892 [info] Child Horde.NodeListener of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.275.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.KeyValSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.892 [info] Child KeyValCluster.KeyValSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.269.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.KeyValSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 100000, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:28:49.892 [info] Child KeyValCluster.DBSupervisor.Crdt of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.277.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.DBSupervisor]}, name: KeyValCluster.DBSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:28:49.892 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.DBSupervisor

15:28:49.892 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.278.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.DBSupervisor, root_name: KeyValCluster.DBSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.892 [info] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.279.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:28:49.893 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.280.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.DBSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.893 [info] Child KeyValCluster.DBSupervisor_telemetry_poller of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.281.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.DBSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.DBSupervisor]}], period: 5000, name: KeyValCluster.DBSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.893 [info] Child Horde.NodeListener of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.282.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.DBSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.893 [info] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.276.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:28:49.893 [info] Child KeyValCluster.AccountSupervisor.Crdt of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.284.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.AccountSupervisor]}, name: KeyValCluster.AccountSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:28:49.893 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.AccountSupervisor

15:28:49.893 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.285.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.AccountSupervisor, root_name: KeyValCluster.AccountSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.893 [info] Child KeyValCluster.AccountSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.286.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.AccountSupervisor, type: :supervisor, name: KeyValCluster.AccountSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:28:49.893 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.287.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.AccountSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.893 [info] Child KeyValCluster.AccountSupervisor_telemetry_poller of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.288.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.AccountSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.AccountSupervisor]}], period: 5000, name: KeyValCluster.AccountSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.893 [info] Child Horde.NodeListener of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.289.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.AccountSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:49.893 [info] Child KeyValCluster.AccountSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.283.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.AccountSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:28:49.893 [info] Child KeyValCluster.ClusterConnector of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.290.0>
Start Call: Task.start_link(#Function<0.78117110/0 in KeyValCluster.Application.start/2>)
Restart: :transient
Shutdown: 5000
Type: :worker

15:28:49.896 [info] Application key_val_cluster started at :"node3@127.0.0.1"
Interactive Elixir (1.14.5) - press Ctrl+C to exit (type h() ENTER for help)
iex(node3@127.0.0.1)1> 
15:28:50.119 [error] Child 24629052970787794762400078616392145820 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor terminated
** (exit) {:name_conflict, {:order, nil}, KeyValCluster.Registry, #PID<18677.2410.0>}
Pid: #PID<0.292.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:50.119 [error] Child 24629052970787794762400078616392145820 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18677.2410.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:50.120 [error] Child 24629052970787794762400078616392145820 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18677.2410.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:50.120 [error] Child 24629052970787794762400078616392145820 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18677.2410.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:50.121 [error] Child 24629052970787794762400078616392145820 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18677.2410.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:50.121 [error] Child 24629052970787794762400078616392145820 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor failed to start
** (exit) already started: #PID<18677.2410.0>
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:50.121 [error] Child 24629052970787794762400078616392145820 of Supervisor KeyValCluster.DBSupervisor.ProcessesSupervisor caused shutdown
** (exit) :reached_max_restart_intensity
Start Call: KeyValCluster.DB.start_link(:order)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:50.121 [error] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor terminated
** (exit) shutdown
Pid: #PID<0.279.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:28:50.122 [error] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor caused shutdown
** (exit) :reached_max_restart_intensity
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:28:50.124 [error] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor terminated
** (exit) shutdown
Pid: #PID<0.276.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:28:50.124 [info] Child KeyValCluster.DBSupervisor.Crdt of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.299.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.DBSupervisor]}, name: KeyValCluster.DBSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:28:50.125 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.DBSupervisor

15:28:50.125 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.300.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.DBSupervisor, root_name: KeyValCluster.DBSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:50.125 [info] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.301.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:28:50.125 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.302.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.DBSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:50.126 [info] Child KeyValCluster.DBSupervisor_telemetry_poller of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.303.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.DBSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.DBSupervisor]}], period: 5000, name: KeyValCluster.DBSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:50.126 [info] Child Horde.NodeListener of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.304.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.DBSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:28:50.126 [info] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.298.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:28:50.128 [error] GenServer #PID<0.297.0> terminating
** (stop) {:name_conflict, {:order, nil}, KeyValCluster.Registry, #PID<18677.2410.0>}
Last message: {:EXIT, #PID<0.293.0>, {:name_conflict, {:order, nil}, KeyValCluster.Registry, #PID<18677.2410.0>}}
State: %DynamicSupervisor{args: {{:temporary, 5000}, []}, extra_arguments: [], mod: Task.Supervisor, name: {#PID<0.297.0>, Task.Supervisor}, strategy: :one_for_one, max_children: :infinity, max_restarts: 3, max_seconds: 5, children: %{}, restarts: []}

15:28:50.136 [error] Process #PID<0.297.0> terminating
** (exit) {:name_conflict, {:order, nil}, KeyValCluster.Registry, #PID<18677.2410.0>}
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: Task.Supervisor.init/1
Ancestors: [#PID<0.293.0>, #PID<0.292.0>, KeyValCluster.DBSupervisor.ProcessesSupervisor, KeyValCluster.DBSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: [{Task.Supervisor, {:temporary, 5000}}]
Trapping Exits: true
Status: :running
Heap Size: 2586
Stack Size: 28
Reductions: 3679


nil
iex(node3@127.0.0.1)2> 
15:29:21.642 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.312.0> (Supervisor.Default) started
Pid: #PID<0.313.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B2"

15:29:21.646 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} of Supervisor #PID<0.312.0> (Supervisor.Default) started
Pid: #PID<0.314.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B2_4436"
"B2_7231"
"B2_9459"
"B2_5015"
"B2_3114"

15:29:29.454 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.321.0> (Supervisor.Default) started
Pid: #PID<0.322.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B4"

15:29:29.454 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B4"}}} of Supervisor #PID<0.321.0> (Supervisor.Default) started
Pid: #PID<0.323.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B4_4436"
"B4_7231"
"B4_9459"
"B4_5015"
"B4_3114"

15:29:53.911 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.332.0> (Supervisor.Default) started
Pid: #PID<0.333.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B3"

15:29:53.911 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.332.0> (Supervisor.Default) started
Pid: #PID<0.334.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3_4436"
"B3_7231"
"B3_9459"
"B3_5015"
"B3_3114"

15:30:19.129 [error] Child :undefined of Supervisor {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} terminated
** (exit) killed
Pid: #PID<0.326.0>
Start Call: KeyValCluster.Account.Auction.start_link("B4_9459")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:30:23.399 [error] Child :undefined of Supervisor {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} terminated
** (exit) killed
Pid: #PID<0.337.0>
Start Call: KeyValCluster.Account.Auction.start_link("B3_9459")
Restart: :permanent
Shutdown: 5000
Type: :worker
Type: :worker  C-c C-c^C
BREAK: (a)bort (A)bort with dump (c)ontinue (p)roc info (i)nfo
       (l)oaded (v)ersion (k)ill (D)b-tables (d)istribution
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●) 
$ iex --name node3@127.0.0.1 --cookie mycookie -S mix
iex --name node3@127.0.0.1 --cookie mycookie -S mix
Erlang/OTP 26 [erts-14.0] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]

warning: use Mix.Config is deprecated. Use the Config module instead
  config/config.exs:1


15:31:05.419 [info] Child :disk_log_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.212.0>
Start Call: :disk_log_sup.start_link()
Restart: :permanent
Shutdown: 1000
Type: :supervisor

15:31:05.429 [info] Child :disk_log_server of Supervisor :kernel_safe_sup started
Pid: #PID<0.213.0>
Start Call: :disk_log_server.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker

15:31:05.442 [info] Application logger started at :"node3@127.0.0.1"

15:31:05.446 [info] Child :telemetry_handler_table of Supervisor :telemetry_sup started
Pid: #PID<0.236.0>
Start Call: :telemetry_handler_table.start_link()
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.446 [info] Application telemetry started at :"node3@127.0.0.1"

15:31:05.446 [info] Application merkle_map started at :"node3@127.0.0.1"

15:31:05.446 [info] Application delta_crdt started at :"node3@127.0.0.1"

15:31:05.451 [info] Application libring started at :"node3@127.0.0.1"

15:31:05.454 [info] Child :telemetry_poller_default of Supervisor :telemetry_poller_sup started
Pid: #PID<0.248.0>
Start Call: :telemetry_poller.start_link([name: :telemetry_poller_default, measurements: [:memory, :total_run_queue_lengths, :system_counts]])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.456 [info] Application telemetry_poller started at :"node3@127.0.0.1"

15:31:05.456 [info] Application horde started at :"node3@127.0.0.1"

15:31:05.456 [info] Application jason started at :"node3@127.0.0.1"

15:31:05.457 [info] Application libcluster started at :"node3@127.0.0.1"

15:31:05.458 [info] Application cubdb started at :"node3@127.0.0.1"

15:31:05.466 [info] Child of Supervisor :inet_gethost_native_sup started
Pid: #PID<0.259.0>
Start Call: :inet_gethost_native.init([])

15:31:05.466 [info] Child :inet_gethost_native_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.258.0>
Start Call: :inet_gethost_native.start_link()
Restart: :temporary
Shutdown: 1000
Type: :worker

15:31:05.472 [info] [libcluster:cluster] connected to :"node1@127.0.0.1"

15:31:05.473 [info] [libcluster:cluster] connected to :"node2@127.0.0.1"

15:31:05.473 [info] Child Cluster.Supervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.257.0>
Start Call: Cluster.Supervisor.start_link([[cluster: [strategy: Cluster.Strategy.Epmd, config: [hosts: [:"node1@127.0.0.1", :"node2@127.0.0.1", :"node3@127.0.0.1"]]]]])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:31:05.484 [info] Child KeyValCluster.Registry.Crdt of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.269.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.RegistryImpl, :on_diffs, [KeyValCluster.Registry]}, name: KeyValCluster.Registry.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:31:05.486 [info] Starting Horde.RegistryImpl with name KeyValCluster.Registry

15:31:05.489 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.270.0>
Start Call: Horde.RegistryImpl.start_link([name: KeyValCluster.Registry, listeners: [], meta: nil, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.490 [info] Child Horde.NodeListener of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.271.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.Registry)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.490 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.268.0>
Start Call: Horde.Registry.start_link([name: KeyValCluster.Registry, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:31:05.497 [info] Child KeyValCluster.KeyValSupervisor.Crdt of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.273.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.KeyValSupervisor]}, name: KeyValCluster.KeyValSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:31:05.498 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.KeyValSupervisor

15:31:05.499 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.274.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.KeyValSupervisor, root_name: KeyValCluster.KeyValSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 100000, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.499 [info] Child KeyValCluster.KeyValSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.275.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.KeyValSupervisor, type: :supervisor, name: KeyValCluster.KeyValSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 100000, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:31:05.499 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.276.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.KeyValSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.499 [info] Child KeyValCluster.KeyValSupervisor_telemetry_poller of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.277.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.KeyValSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.KeyValSupervisor]}], period: 5000, name: KeyValCluster.KeyValSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.499 [info] Child Horde.NodeListener of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.278.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.KeyValSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.499 [info] Child KeyValCluster.KeyValSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.272.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.KeyValSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 100000, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:31:05.500 [info] Child KeyValCluster.DBSupervisor.Crdt of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.280.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.DBSupervisor]}, name: KeyValCluster.DBSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:31:05.500 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.DBSupervisor

15:31:05.500 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.281.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.DBSupervisor, root_name: KeyValCluster.DBSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.500 [info] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.282.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:31:05.500 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.283.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.DBSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.500 [info] Child KeyValCluster.DBSupervisor_telemetry_poller of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.284.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.DBSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.DBSupervisor]}], period: 5000, name: KeyValCluster.DBSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.500 [info] Child Horde.NodeListener of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.285.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.DBSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.500 [info] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.279.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:31:05.500 [info] Child KeyValCluster.AccountSupervisor.Crdt of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.287.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.AccountSupervisor]}, name: KeyValCluster.AccountSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:31:05.500 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.AccountSupervisor

15:31:05.501 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.288.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.AccountSupervisor, root_name: KeyValCluster.AccountSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.501 [info] Child KeyValCluster.AccountSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.289.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.AccountSupervisor, type: :supervisor, name: KeyValCluster.AccountSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:31:05.501 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.290.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.AccountSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.501 [info] Child KeyValCluster.AccountSupervisor_telemetry_poller of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.291.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.AccountSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.AccountSupervisor]}], period: 5000, name: KeyValCluster.AccountSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.501 [info] Child Horde.NodeListener of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.292.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.AccountSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:31:05.501 [info] Child KeyValCluster.AccountSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.286.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.AccountSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:31:05.501 [info] Child KeyValCluster.ClusterConnector of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.293.0>
Start Call: Task.start_link(#Function<0.78117110/0 in KeyValCluster.Application.start/2>)
Restart: :transient
Shutdown: 5000
Type: :worker

15:31:05.504 [info] Application key_val_cluster started at :"node3@127.0.0.1"
Interactive Elixir (1.14.5) - press Ctrl+C to exit (type h() ENTER for help)
iex(node3@127.0.0.1)1> 
15:31:15.187 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.302.0> (Supervisor.Default) started
Pid: #PID<0.303.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B3"

15:31:15.192 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.302.0> (Supervisor.Default) started
Pid: #PID<0.304.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3_4436"
"B3_7231"
"B3_9459"
"B3_5015"
"B3_3114"

15:31:29.215 [error] Child :undefined of Supervisor {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} terminated
** (exit) killed
Pid: #PID<0.308.0>
Start Call: KeyValCluster.Account.Auction.start_link("B3_5015")
Restart: :permanent
Shutdown: 5000
Type: :worker
Type: :worker
Type: :worker
** (SyntaxError) iex:1:1: syntax error before: 'Type'
    |
  1 | Type: :worker
    | ^
    (iex 1.14.5) lib/iex/evaluator.ex:292: IEx.Evaluator.parse_eval_inspect/3
    (iex 1.14.5) lib/iex/evaluator.ex:187: IEx.Evaluator.loop/1
    (iex 1.14.5) lib/iex/evaluator.ex:32: IEx.Evaluator.init/4
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
iex(node3@127.0.0.1)1> 
15:32:38.331 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.319.0> (Supervisor.Default) started
Pid: #PID<0.320.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B2"

15:32:38.332 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} of Supervisor #PID<0.319.0> (Supervisor.Default) started
Pid: #PID<0.321.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B2_4436"
"B2_7231"
"B2_9459"
"B2_5015"
"B2_3114"

15:34:31.423 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.338.0> (Supervisor.Default) started
Pid: #PID<0.339.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B4"

15:34:31.423 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B4"}}} of Supervisor #PID<0.338.0> (Supervisor.Default) started
Pid: #PID<0.340.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B4_4436"
"B4_7231"
"B4_9459"
"B4_5015"
"B4_3114"

15:35:19.761 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}} of Supervisor #PID<0.348.0> (Supervisor.Default) started
Pid: #PID<0.349.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B7"

15:35:19.761 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B7"}}} of Supervisor #PID<0.348.0> (Supervisor.Default) started
Pid: #PID<0.350.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B7_4436"
"B7_7231"
"B7_9459"
"B7_5015"
"B7_3114"

15:35:21.865 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}} of Supervisor #PID<0.357.0> (Supervisor.Default) started
Pid: #PID<0.358.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B8"

15:35:21.865 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}} of Supervisor #PID<0.357.0> (Supervisor.Default) started
Pid: #PID<0.359.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B8_4436"
"B8_7231"
"B8_9459"
"B8_5015"
"B8_3114"

15:35:30.593 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}} of Supervisor #PID<0.366.0> (Supervisor.Default) started
Pid: #PID<0.367.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B10"

15:35:30.593 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}} of Supervisor #PID<0.366.0> (Supervisor.Default) started
Pid: #PID<0.368.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B10_4436"
"B10_7231"
"B10_9459"
"B10_5015"
"B10_3114"
"B1"

15:37:05.757 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}} of Supervisor #PID<0.377.0> (Supervisor.Default) started
Pid: #PID<0.378.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B1_4436"

15:37:05.757 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B1"}}} of Supervisor #PID<0.377.0> (Supervisor.Default) started
Pid: #PID<0.379.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B1_7231"
"B1_9459"
"B1_5015"
"B1_3114"

15:37:05.761 [error] Process #PID<0.376.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B1"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.289.0>, #PID<0.377.0>, #PID<0.270.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 233
Stack Size: 28
Reductions: 327

15:37:05.762 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}} of Supervisor #PID<0.381.0> (Supervisor.Default) started
Pid: #PID<0.382.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B1"

15:37:05.762 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B1"}}} of Supervisor #PID<0.381.0> (Supervisor.Default) started
Pid: #PID<0.383.0>
Start Call: Task.start_link(#Function<0.56339264/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker

15:37:05.762 [error] Process #PID<0.380.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B1"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.289.0>, #PID<0.381.0>, #PID<0.270.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 233
Stack Size: 28
Reductions: 325

15:37:05.763 [error] GenServer :appmon_info terminating
** (stop) no connection
Last message: {:EXIT, #PID<18677.18885.0>, :noconnection}
State: {:state, #PID<18677.18885.0>, [], #Reference<0.1722410028.2763128833.1792>, [#PID<18677.18885.0>]}

15:37:05.766 [error] Process :appmon_info (#PID<0.329.0>) terminating
** (exit) no connection
    (stdlib 5.0) gen_server.erl:1208: :gen_server.handle_common_reply/8
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: :appmon_info.init/1
Ancestors: [#PID<0.328.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 46422
Stack Size: 28
Reductions: 1079837

15:37:05.763 [error] GenServer #PID<0.377.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B1"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.376.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B1"}, 5000]}}}
State: {:state, {#PID<0.377.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B1"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}} => {:child, #PID<0.378.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B1"}}} => {:child, :undefined, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B1"}}}, {Task, :start_link, [#Function<0.56339264/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B1"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.56339264/0 in KeyValCluster.Account.init/1>]}}]}}}

15:37:05.763 [error] GenServer #PID<0.381.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B1"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.380.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B1"}, 5000]}}}
State: {:state, {#PID<0.381.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B1"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}} => {:child, #PID<0.382.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B1"}}} => {:child, #PID<0.383.0>, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B1"}}}, {Task, :start_link, [#Function<0.56339264/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B1"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B1"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.56339264/0 in KeyValCluster.Account.init/1>]}}]}}}

15:37:05.766 [error] Process #PID<0.377.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B1"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.376.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 4185
Stack Size: 28
Reductions: 18196

15:37:05.766 [error] Process #PID<0.381.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B1"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.380.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.255.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 4185
Stack Size: 28
Reductions: 18076

15:37:53.699 [error] Child :undefined of Supervisor {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}} terminated
** (exit) killed
Pid: #PID<0.371.0>
Start Call: KeyValCluster.Account.Auction.start_link("B10_9459")
Restart: :permanent
Shutdown: 5000
Type: :worker

15:38:05.323 [error] Child :undefined of Supervisor {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} terminated
** (exit) killed
Pid: #PID<0.341.0>
Start Call: KeyValCluster.Account.Auction.start_link("B4_4436")
Restart: :permanent
Shutdown: 5000
Type: :worker
  C-c C-c^C
BREAK: (a)bort (A)bort with dump (c)ontinue (p)roc info (i)nfo
       (l)oaded (v)ersion (k)ill (D)b-tables (d)istribution
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●) 
$ panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●) 
</elixir-playground/key_val_cluster (main●) 
zsh: number expected
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●) 
$ iex --name node3@127.0.0.1 --cookie mycookie -S mix
iex --name node3@127.0.0.1 --cookie mycookie -S mix
Erlang/OTP 26 [erts-14.0] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]

warning: use Mix.Config is deprecated. Use the Config module instead
  config/config.exs:1


15:39:40.625 [info] Child :disk_log_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.214.0>
Start Call: :disk_log_sup.start_link()
Restart: :permanent
Shutdown: 1000
Type: :supervisor

15:39:40.635 [info] Child :disk_log_server of Supervisor :kernel_safe_sup started
Pid: #PID<0.215.0>
Start Call: :disk_log_server.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker

15:39:40.650 [info] Application logger started at :"node3@127.0.0.1"

15:39:40.653 [info] Child :telemetry_handler_table of Supervisor :telemetry_sup started
Pid: #PID<0.238.0>
Start Call: :telemetry_handler_table.start_link()
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.654 [info] Application telemetry started at :"node3@127.0.0.1"

15:39:40.654 [info] Application merkle_map started at :"node3@127.0.0.1"

15:39:40.654 [info] Application delta_crdt started at :"node3@127.0.0.1"

15:39:40.659 [info] Application libring started at :"node3@127.0.0.1"

15:39:40.662 [info] Child :telemetry_poller_default of Supervisor :telemetry_poller_sup started
Pid: #PID<0.250.0>
Start Call: :telemetry_poller.start_link([name: :telemetry_poller_default, measurements: [:memory, :total_run_queue_lengths, :system_counts]])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.663 [info] Application telemetry_poller started at :"node3@127.0.0.1"

15:39:40.663 [info] Application horde started at :"node3@127.0.0.1"

15:39:40.664 [info] Application jason started at :"node3@127.0.0.1"

15:39:40.664 [info] Application libcluster started at :"node3@127.0.0.1"

15:39:40.664 [info] Application cubdb started at :"node3@127.0.0.1"

15:39:40.664 [info] Application uuid started at :"node3@127.0.0.1"

15:39:40.674 [info] Child of Supervisor :inet_gethost_native_sup started
Pid: #PID<0.262.0>
Start Call: :inet_gethost_native.init([])

15:39:40.674 [info] Child :inet_gethost_native_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.261.0>
Start Call: :inet_gethost_native.start_link()
Restart: :temporary
Shutdown: 1000
Type: :worker

15:39:40.678 [info] [libcluster:cluster] connected to :"node1@127.0.0.1"

15:39:40.682 [info] [libcluster:cluster] connected to :"node2@127.0.0.1"

15:39:40.682 [info] Child Cluster.Supervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.260.0>
Start Call: Cluster.Supervisor.start_link([[cluster: [strategy: Cluster.Strategy.Epmd, config: [hosts: [:"node1@127.0.0.1", :"node2@127.0.0.1", :"node3@127.0.0.1"]]]]])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:39:40.692 [info] Child KeyValCluster.Registry.Crdt of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.270.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.RegistryImpl, :on_diffs, [KeyValCluster.Registry]}, name: KeyValCluster.Registry.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:39:40.694 [info] Starting Horde.RegistryImpl with name KeyValCluster.Registry

15:39:40.697 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.271.0>
Start Call: Horde.RegistryImpl.start_link([name: KeyValCluster.Registry, listeners: [], meta: nil, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.697 [info] Child Horde.NodeListener of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.272.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.Registry)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.697 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.269.0>
Start Call: Horde.Registry.start_link([name: KeyValCluster.Registry, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:39:40.706 [info] Child KeyValCluster.KeyValSupervisor.Crdt of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.274.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.KeyValSupervisor]}, name: KeyValCluster.KeyValSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:39:40.707 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.KeyValSupervisor

15:39:40.707 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.275.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.KeyValSupervisor, root_name: KeyValCluster.KeyValSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 100000, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.708 [info] Child KeyValCluster.KeyValSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.276.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.KeyValSupervisor, type: :supervisor, name: KeyValCluster.KeyValSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 100000, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:39:40.708 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.277.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.KeyValSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.708 [info] Child KeyValCluster.KeyValSupervisor_telemetry_poller of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.278.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.KeyValSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.KeyValSupervisor]}], period: 5000, name: KeyValCluster.KeyValSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.708 [info] Child Horde.NodeListener of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.279.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.KeyValSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.708 [info] Child KeyValCluster.KeyValSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.273.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.KeyValSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 100000, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:39:40.708 [info] Child KeyValCluster.DBSupervisor.Crdt of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.281.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.DBSupervisor]}, name: KeyValCluster.DBSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:39:40.708 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.DBSupervisor

15:39:40.708 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.282.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.DBSupervisor, root_name: KeyValCluster.DBSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.708 [info] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.283.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:39:40.708 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.284.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.DBSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.708 [info] Child KeyValCluster.DBSupervisor_telemetry_poller of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.285.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.DBSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.DBSupervisor]}], period: 5000, name: KeyValCluster.DBSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.708 [info] Child Horde.NodeListener of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.286.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.DBSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.708 [info] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.280.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:39:40.708 [info] Child KeyValCluster.AccountSupervisor.Crdt of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.288.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.AccountSupervisor]}, name: KeyValCluster.AccountSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

15:39:40.709 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.AccountSupervisor

15:39:40.709 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.289.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.AccountSupervisor, root_name: KeyValCluster.AccountSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.709 [info] Child KeyValCluster.AccountSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.290.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.AccountSupervisor, type: :supervisor, name: KeyValCluster.AccountSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:39:40.709 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.291.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.AccountSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.709 [info] Child KeyValCluster.AccountSupervisor_telemetry_poller of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.292.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.AccountSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.AccountSupervisor]}], period: 5000, name: KeyValCluster.AccountSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.709 [info] Child Horde.NodeListener of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.293.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.AccountSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

15:39:40.709 [info] Child KeyValCluster.AccountSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.287.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.AccountSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:39:40.709 [info] Child KeyValCluster.ClusterConnector of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.294.0>
Start Call: Task.start_link(#Function<0.78117110/0 in KeyValCluster.Application.start/2>)
Restart: :transient
Shutdown: 5000
Type: :worker

15:39:40.711 [info] Application key_val_cluster started at :"node3@127.0.0.1"
Interactive Elixir (1.14.5) - press Ctrl+C to exit (type h() ENTER for help)
iex(node3@127.0.0.1)1> 
15:41:43.928 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}} of Supervisor #PID<0.306.0> (Supervisor.Default) started
Pid: #PID<0.307.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B7"

15:41:43.932 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B7"}}} of Supervisor #PID<0.306.0> (Supervisor.Default) started
Pid: #PID<0.308.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B7_9ce89328-430e-4feb-afae-5ab0141a38b1"
"B7_f8c58976-eea7-4cf6-af5c-430da46669d1"
"B7_9c3e35fd-4ec3-4faa-9acc-4f1d95aa9a07"
"B7_d08b6749-999f-40ab-98b0-d070b3b552e6"
"B7_55b7a9b7-cca2-4e6c-b260-0f80aba9d422"

15:43:04.566 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.318.0> (Supervisor.Default) started
Pid: #PID<0.319.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B2"

15:43:04.566 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} of Supervisor #PID<0.318.0> (Supervisor.Default) started
Pid: #PID<0.320.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B2_9a317399-0da9-49e1-9cc5-a9ba5acef7ca"
"B2_baf19949-25f5-4889-b1cd-a779451657f2"
"B2_2eca0f79-9c89-402a-96c6-6e9b3eb0b5ee"
"B2_d7827d39-dac0-4661-8e93-f83f75207e88"
"B2_be297dd4-ac76-4a62-9ac1-cc0d3eab5156"

15:43:04.571 [error] Process #PID<0.317.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B2"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.290.0>, #PID<0.318.0>, #PID<0.271.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 610
Stack Size: 28
Reductions: 369

15:43:04.590 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}} of Supervisor #PID<0.322.0> (Supervisor.Default) started
Pid: #PID<0.323.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:43:04.590 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B6"}}} of Supervisor #PID<0.322.0> (Supervisor.Default) started
Pid: #PID<0.324.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B6"

15:43:04.592 [error] Process #PID<0.321.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B6"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.290.0>, #PID<0.322.0>, #PID<0.271.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 610
Stack Size: 28
Reductions: 368
"B4"

15:43:04.595 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.326.0> (Supervisor.Default) started
Pid: #PID<0.327.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:43:04.595 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B4"}}} of Supervisor #PID<0.326.0> (Supervisor.Default) started
Pid: #PID<0.328.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B4_1ad63bd0-b00e-4f1c-9e89-172adc778db7"
"B4_02430ce7-7b1f-4442-8475-99d277f30cae"
"B4_fe0cb647-1d9d-45e9-a015-d9087c5fa6f9"
"B4_faf93328-7424-4cdd-a5af-f9d3fa36e19e"
"B4_42124c66-c4bf-45d0-a758-ed1f22f593d6"

15:43:04.599 [error] Process #PID<0.325.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B4"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 5
Messages: ["$gen_cast": {:add_auction, "B4", "B4_1ad63bd0-b00e-4f1c-9e89-172adc778db7"}, "$gen_cast": {:add_auction, "B4", "B4_02430ce7-7b1f-4442-8475-99d277f30cae"}, "$gen_cast": {:add_auction, "B4", "B4_fe0cb647-1d9d-45e9-a015-d9087c5fa6f9"}, "$gen_cast": {:add_auction, "B4", "B4_faf93328-7424-4cdd-a5af-f9d3fa36e19e"}, "$gen_cast": {:add_auction, "B4", "B4_42124c66-c4bf-45d0-a758-ed1f22f593d6"}]
Links: [#PID<0.290.0>, #PID<0.326.0>, #PID<0.271.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 610
Stack Size: 28
Reductions: 418

15:43:04.601 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}} of Supervisor #PID<0.330.0> (Supervisor.Default) started
Pid: #PID<0.331.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

15:43:04.601 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}} of Supervisor #PID<0.330.0> (Supervisor.Default) started
Pid: #PID<0.332.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B8"
"B8_f0a4acc8-8e76-4073-b229-0109f9f52445"
"B8_18a2cd95-b042-403c-ae77-924f0b8db62c"
"B8_3ae1d112-71a5-4ef0-bc50-bfd6c5c5b077"
"B8_888f41c1-0e98-4daf-b5af-840d89892dfa"
"B8_f5721c9b-afff-44a4-bbe4-b1d9c7c1cc34"

15:43:04.602 [error] Process #PID<0.329.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B8"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 5
Messages: ["$gen_cast": {:add_auction, "B8", "B8_f0a4acc8-8e76-4073-b229-0109f9f52445"}, "$gen_cast": {:add_auction, "B8", "B8_18a2cd95-b042-403c-ae77-924f0b8db62c"}, "$gen_cast": {:add_auction, "B8", "B8_3ae1d112-71a5-4ef0-bc50-bfd6c5c5b077"}, "$gen_cast": {:add_auction, "B8", "B8_888f41c1-0e98-4daf-b5af-840d89892dfa"}, "$gen_cast": {:add_auction, "B8", "B8_f5721c9b-afff-44a4-bbe4-b1d9c7c1cc34"}]
Links: [#PID<0.290.0>, #PID<0.330.0>, #PID<0.271.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 610
Stack Size: 28
Reductions: 417

15:43:04.599 [error] GenServer #PID<0.322.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B6"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.321.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B6"}, 5000]}}}
State: {:state, {#PID<0.322.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B6"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}} => {:child, #PID<0.323.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B6"}}} => {:child, #PID<0.324.0>, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B6"}}}, {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B6"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}}]}}}

15:43:04.599 [error] GenServer #PID<0.318.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B2"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.317.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B2"}, 5000]}}}
State: {:state, {#PID<0.318.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} => {:child, #PID<0.319.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} => {:child, :undefined, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}}, {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}}]}}}

15:43:04.605 [error] Process #PID<0.322.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B6"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.321.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 4185
Stack Size: 28
Reductions: 18081

15:43:04.605 [error] Process #PID<0.318.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B2"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.317.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 4185
Stack Size: 28
Reductions: 18203

15:43:04.600 [error] GenServer #PID<0.326.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B4"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.325.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B4"}, 5000]}}}
State: {:state, {#PID<0.326.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B4"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} => {:child, #PID<0.327.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B4"}}} => {:child, :undefined, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B4"}}}, {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B4"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}}]}}}

15:43:04.605 [error] Process #PID<0.326.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B4"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.325.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 18153

15:43:04.603 [error] GenServer #PID<0.330.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B8"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.329.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B8"}, 5000]}}}
State: {:state, {#PID<0.330.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}} => {:child, #PID<0.331.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}} => {:child, :undefined, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}}, {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}}]}}}

15:43:04.606 [error] Process #PID<0.330.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B8"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.329.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 18153

15:57:46.935 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.350.0> (Supervisor.Default) started
Pid: #PID<0.351.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B2"

15:57:46.935 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} of Supervisor #PID<0.350.0> (Supervisor.Default) started
Pid: #PID<0.352.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B2_2ffdd57f-4001-4433-bd43-11b5a2a7f279"
"B2_a31db346-4f5e-4c7c-9c9d-c837dd302aa2"
"B2_ba87bf63-11ac-43ad-9eb1-986b2b6b6e12"
"B2_96d4d3c3-2ac7-4dfd-82cf-8fd0ee62a003"
"B2_d4826539-f272-4bc0-a7b1-b196a823766a"

15:57:46.944 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}} of Supervisor #PID<0.359.0> (Supervisor.Default) started
Pid: #PID<0.360.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B6"

15:57:46.944 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B6"}}} of Supervisor #PID<0.359.0> (Supervisor.Default) started
Pid: #PID<0.361.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B6_7fc2f2de-c162-44f7-ad9b-0448e4857cbd"
"B6_de0ca81c-c338-4814-ae0c-21b6d8758eee"
"B6_21069e26-45ef-4f48-8672-94a598855f6d"
"B6_929c99dc-0581-4180-a577-7976f314af55"
"B6_9dce2474-30ba-4f54-b1e8-e5112890fd2f"

15:57:46.948 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.366.0> (Supervisor.Default) started
Pid: #PID<0.367.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B4"

15:57:46.948 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B4"}}} of Supervisor #PID<0.366.0> (Supervisor.Default) started
Pid: #PID<0.369.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B4_27062aa8-315f-4310-8035-8250b7bb7396"
"B4_caa2b4b2-f168-4200-a5fd-438f3bc2d8a8"
"B4_4ff325a4-f4a0-4baa-9067-92dcd6310036"
"B4_871e5c97-95a4-44cd-a571-09760d8401a2"
"B4_374526bd-7257-41a2-ad75-5b12f5b59737"

15:57:46.951 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}} of Supervisor #PID<0.375.0> (Supervisor.Default) started
Pid: #PID<0.376.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B8"

15:57:46.952 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}} of Supervisor #PID<0.375.0> (Supervisor.Default) started
Pid: #PID<0.379.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B8_221c2926-2083-40e1-a057-c90c02119082"
"B8_c85f7330-4fcc-4126-9d51-ed016faf273b"
"B8_31fa27cf-aacc-444b-9f1b-37cf356b0dc7"
"B8_1666e0d3-7dc2-442e-9272-7893112c730e"
"B8_304d314d-a74d-4642-ab89-478c3dfc283e"

16:03:31.624 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}} of Supervisor #PID<0.398.0> (Supervisor.Default) started
Pid: #PID<0.399.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B10"

16:03:31.624 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}} of Supervisor #PID<0.398.0> (Supervisor.Default) started
Pid: #PID<0.400.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B10_34c56e00-c220-48b4-b9c1-c6e16bcf41c0"
"B10_54e9bad9-de74-494f-82df-5a3cc0fa9458"
"B10_4feb2afa-3530-4362-89b4-c9b53d39dbc3"

16:03:31.624 [error] Process #PID<0.396.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B10"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.290.0>, #PID<0.398.0>, #PID<0.271.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 233
Stack Size: 28
Reductions: 325

16:03:31.625 [error] GenServer #PID<0.398.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B10"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.396.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B10"}, 5000]}}}
State: {:state, {#PID<0.398.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}} => {:child, #PID<0.399.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}} => {:child, #PID<0.400.0>, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}}, {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}}]}}}

16:03:31.625 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.402.0> (Supervisor.Default) started
Pid: #PID<0.403.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B3"

16:03:31.625 [error] Process #PID<0.398.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B10"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.396.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 18123
"B3_3f75ac8f-ab4d-48f2-b5d5-fa2d17104ee8"

16:03:31.626 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.402.0> (Supervisor.Default) started
Pid: #PID<0.404.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3_d705ef22-cfa4-4da2-bfef-8ee60f7764bb"

16:03:31.626 [error] Process #PID<0.401.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.290.0>, #PID<0.402.0>, #PID<0.271.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 233
Stack Size: 28
Reductions: 325

16:03:31.626 [error] GenServer #PID<0.402.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.401.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000]}}}
State: {:state, {#PID<0.402.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} => {:child, #PID<0.403.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} => {:child, #PID<0.404.0>, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}}]}}}

16:03:31.627 [error] Process #PID<0.402.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.401.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 18124

16:03:31.629 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.406.0> (Supervisor.Default) started
Pid: #PID<0.407.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B3"

16:03:31.629 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.406.0> (Supervisor.Default) started
Pid: #PID<0.408.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3_6c789de4-734c-4708-a7cb-5ffc2448489b"
"B3_11519b08-2716-41e8-88b9-5b0a6f1bf824"

16:03:31.629 [error] Process #PID<0.405.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.290.0>, #PID<0.406.0>, #PID<0.271.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 233
Stack Size: 28
Reductions: 325
"B3_a6ff7d13-26ff-46c1-9e0a-0171d1160c1b"

16:03:31.629 [error] GenServer #PID<0.406.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.405.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000]}}}
State: {:state, {#PID<0.406.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} => {:child, #PID<0.407.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} => {:child, #PID<0.408.0>, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}}]}}}
"B3"
"B10"

16:03:31.630 [error] Process #PID<0.406.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.405.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 18129

16:03:31.630 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.411.0> (Supervisor.Default) started
Pid: #PID<0.412.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:03:31.630 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.411.0> (Supervisor.Default) started
Pid: #PID<0.413.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker

16:03:31.631 [error] Process #PID<0.410.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.290.0>, #PID<0.411.0>, #PID<0.271.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 233
Stack Size: 28
Reductions: 325

16:03:31.631 [error] GenServer #PID<0.411.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.410.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000]}}}
State: {:state, {#PID<0.411.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} => {:child, #PID<0.412.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} => {:child, #PID<0.413.0>, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.132352011/0 in KeyValCluster.Account.init/1>]}}]}}}

16:03:31.631 [error] Process #PID<0.411.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.410.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 18124

16:03:31.633 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}} of Supervisor #PID<0.416.0> (Supervisor.Default) started
Pid: #PID<0.417.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:03:31.633 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}} of Supervisor #PID<0.416.0> (Supervisor.Default) started
Pid: #PID<0.418.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B10_31bd00ba-ffd7-4855-a123-a60fd06a1c03"
"B3"

16:03:31.641 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.422.0> (Supervisor.Default) started
Pid: #PID<0.423.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:03:31.641 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.422.0> (Supervisor.Default) started
Pid: #PID<0.424.0>
Start Call: Task.start_link(#Function<0.132352011/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3_19d007f6-dfba-4776-a845-22eda81af98c"
"B10_67083f2c-4b70-4d75-8029-c4a4a1891e12"
"B3_98d347c6-4f03-42bc-b0cc-ec359cba6ebf"
"B10_5b6ffbeb-7c70-4f7d-b5af-906e688962a6"
"B3_62a66754-7a58-42f3-b757-d8cabe88531a"
"B10_402af210-878b-4d5a-81a3-54d10aeef425"
"B3_8e1b566b-75b0-4c38-a9db-c6f8d25c6fd8"
"B10_9d359ac4-5742-480c-8c0b-9927561c3e6d"
"B3_4d0ec8ed-34f6-448b-b379-8863958bd6cb"
  C-c C-c^C
BREAK: (a)bort (A)bort with dump (c)ontinue (p)roc info (i)nfo
       (l)oaded (v)ersion (k)ill (D)b-tables (d)istribution
 
panasun at nodebin in ~/Projects/panasun/elixir-playground/key_val_cluster (main●) 
$ iex --name node3@127.0.0.1 --cookie mycookie -S mix
iex --name node3@127.0.0.1 --cookie mycookie -S mix
Erlang/OTP 26 [erts-14.0] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]

warning: use Mix.Config is deprecated. Use the Config module instead
  config/config.exs:1


16:04:15.641 [info] Child :disk_log_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.214.0>
Start Call: :disk_log_sup.start_link()
Restart: :permanent
Shutdown: 1000
Type: :supervisor

16:04:15.652 [info] Child :disk_log_server of Supervisor :kernel_safe_sup started
Pid: #PID<0.215.0>
Start Call: :disk_log_server.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker

16:04:15.667 [info] Application logger started at :"node3@127.0.0.1"

16:04:15.671 [info] Child :telemetry_handler_table of Supervisor :telemetry_sup started
Pid: #PID<0.238.0>
Start Call: :telemetry_handler_table.start_link()
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.671 [info] Application telemetry started at :"node3@127.0.0.1"

16:04:15.671 [info] Application merkle_map started at :"node3@127.0.0.1"

16:04:15.671 [info] Application delta_crdt started at :"node3@127.0.0.1"

16:04:15.677 [info] Application libring started at :"node3@127.0.0.1"

16:04:15.680 [info] Child :telemetry_poller_default of Supervisor :telemetry_poller_sup started
Pid: #PID<0.250.0>
Start Call: :telemetry_poller.start_link([name: :telemetry_poller_default, measurements: [:memory, :total_run_queue_lengths, :system_counts]])
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.683 [info] Application telemetry_poller started at :"node3@127.0.0.1"

16:04:15.683 [info] Application horde started at :"node3@127.0.0.1"

16:04:15.683 [info] Application jason started at :"node3@127.0.0.1"

16:04:15.683 [info] Application libcluster started at :"node3@127.0.0.1"

16:04:15.683 [info] Application cubdb started at :"node3@127.0.0.1"

16:04:15.683 [info] Application uuid started at :"node3@127.0.0.1"

16:04:15.693 [info] Child of Supervisor :inet_gethost_native_sup started
Pid: #PID<0.262.0>
Start Call: :inet_gethost_native.init([])

16:04:15.693 [info] Child :inet_gethost_native_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.261.0>
Start Call: :inet_gethost_native.start_link()
Restart: :temporary
Shutdown: 1000
Type: :worker

16:04:15.698 [info] [libcluster:cluster] connected to :"node1@127.0.0.1"

16:04:15.701 [info] [libcluster:cluster] connected to :"node2@127.0.0.1"

16:04:15.701 [info] Child Cluster.Supervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.260.0>
Start Call: Cluster.Supervisor.start_link([[cluster: [strategy: Cluster.Strategy.Epmd, config: [hosts: [:"node1@127.0.0.1", :"node2@127.0.0.1", :"node3@127.0.0.1"]]]]])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:04:15.714 [info] Child KeyValCluster.Registry.Crdt of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.272.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.RegistryImpl, :on_diffs, [KeyValCluster.Registry]}, name: KeyValCluster.Registry.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

16:04:15.717 [info] Starting Horde.RegistryImpl with name KeyValCluster.Registry

16:04:15.720 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.273.0>
Start Call: Horde.RegistryImpl.start_link([name: KeyValCluster.Registry, listeners: [], meta: nil, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.720 [info] Child Horde.NodeListener of Supervisor KeyValCluster.Registry.Supervisor started
Pid: #PID<0.274.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.Registry)
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.720 [info] Child KeyValCluster.Registry of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.271.0>
Start Call: Horde.Registry.start_link([name: KeyValCluster.Registry, keys: :unique, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:04:15.727 [info] Child KeyValCluster.KeyValSupervisor.Crdt of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.276.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.KeyValSupervisor]}, name: KeyValCluster.KeyValSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

16:04:15.727 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.KeyValSupervisor

16:04:15.728 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.277.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.KeyValSupervisor, root_name: KeyValCluster.KeyValSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 100000, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.728 [info] Child KeyValCluster.KeyValSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.278.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.KeyValSupervisor, type: :supervisor, name: KeyValCluster.KeyValSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 100000, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:04:15.728 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.279.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.KeyValSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.728 [info] Child KeyValCluster.KeyValSupervisor_telemetry_poller of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.280.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.KeyValSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.KeyValSupervisor]}], period: 5000, name: KeyValCluster.KeyValSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.728 [info] Child Horde.NodeListener of Supervisor KeyValCluster.KeyValSupervisor.Supervisor started
Pid: #PID<0.281.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.KeyValSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.728 [info] Child KeyValCluster.KeyValSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.275.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.KeyValSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 100000, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:04:15.728 [info] Child KeyValCluster.DBSupervisor.Crdt of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.283.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.DBSupervisor]}, name: KeyValCluster.DBSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

16:04:15.728 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.DBSupervisor

16:04:15.728 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.284.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.DBSupervisor, root_name: KeyValCluster.DBSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.729 [info] Child KeyValCluster.DBSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.285.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.DBSupervisor, type: :supervisor, name: KeyValCluster.DBSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:04:15.729 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.286.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.DBSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.729 [info] Child KeyValCluster.DBSupervisor_telemetry_poller of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.287.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.DBSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.DBSupervisor]}], period: 5000, name: KeyValCluster.DBSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.729 [info] Child Horde.NodeListener of Supervisor KeyValCluster.DBSupervisor.Supervisor started
Pid: #PID<0.288.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.DBSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.729 [info] Child KeyValCluster.DBSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.282.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.DBSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:04:15.729 [info] Child KeyValCluster.AccountSupervisor.Crdt of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.290.0>
Start Call: DeltaCrdt.start_link(DeltaCrdt.AWLWWMap, [sync_interval: 300, max_sync_size: :infinite, shutdown: 30000, crdt: DeltaCrdt.AWLWWMap, on_diffs: {Horde.DynamicSupervisorImpl, :on_diffs, [KeyValCluster.AccountSupervisor]}, name: KeyValCluster.AccountSupervisor.Crdt])
Restart: :permanent
Shutdown: 30000
Type: :worker

16:04:15.730 [info] Starting Horde.DynamicSupervisorImpl with name KeyValCluster.AccountSupervisor

16:04:15.730 [info] Child Horde.DynamicSupervisorImpl of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.291.0>
Start Call: Horde.DynamicSupervisorImpl.start_link([name: KeyValCluster.AccountSupervisor, root_name: KeyValCluster.AccountSupervisor, init_module: Supervisor.Default, strategy: :one_for_one, intensity: 5, period: 1, max_children: :infinity, extra_arguments: [], distribution_strategy: Horde.UniformQuorumDistribution, process_redistribution: :passive, members: :auto])
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.730 [info] Child KeyValCluster.AccountSupervisor.ProcessesSupervisor of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.292.0>
Start Call: Horde.ProcessesSupervisor.start_link([shutdown: :infinity, root_name: KeyValCluster.AccountSupervisor, type: :supervisor, name: KeyValCluster.AccountSupervisor.ProcessesSupervisor, strategy: :one_for_one, max_restarts: 5, max_seconds: 1])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:04:15.730 [info] Child Horde.SignalShutdown of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.293.0>
Start Call: GenServer.start_link(Horde.SignalShutdown, [KeyValCluster.AccountSupervisor])
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.730 [info] Child KeyValCluster.AccountSupervisor_telemetry_poller of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.294.0>
Start Call: :telemetry_poller.start_link([measurements: [{:process_info, [name: KeyValCluster.AccountSupervisor, event: [:horde, :supervisor], keys: [:message_queue_len]]}, {Horde.DynamicSupervisorTelemetryPoller, :poll, [KeyValCluster.AccountSupervisor]}], period: 5000, name: KeyValCluster.AccountSupervisor_telemetry_poller])
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.730 [info] Child Horde.NodeListener of Supervisor KeyValCluster.AccountSupervisor.Supervisor started
Pid: #PID<0.295.0>
Start Call: Horde.NodeListener.start_link(KeyValCluster.AccountSupervisor)
Restart: :permanent
Shutdown: 5000
Type: :worker

16:04:15.731 [info] Child KeyValCluster.AccountSupervisor of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.289.0>
Start Call: Horde.DynamicSupervisor.start_link([name: KeyValCluster.AccountSupervisor, strategy: :one_for_one, distribution_strategy: Horde.UniformQuorumDistribution, max_restarts: 5, max_seconds: 1, shutdown: 50000, members: :auto])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:04:15.731 [info] Child KeyValCluster.ClusterConnector of Supervisor KeyValCluster.Supervisor started
Pid: #PID<0.296.0>
Start Call: Task.start_link(#Function<0.84557692/0 in KeyValCluster.Application.start/2>)
Restart: :transient
Shutdown: 5000
Type: :worker

16:04:15.735 [info] Application key_val_cluster started at :"node3@127.0.0.1"
Interactive Elixir (1.14.5) - press Ctrl+C to exit (type h() ENTER for help)
iex(node3@127.0.0.1)1> 
16:04:18.867 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}} of Supervisor #PID<0.303.0> (Supervisor.Default) started
Pid: #PID<0.304.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B8"

16:04:18.873 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}} of Supervisor #PID<0.303.0> (Supervisor.Default) started
Pid: #PID<0.305.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker

16:04:18.876 [error] Process #PID<0.302.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B8"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.292.0>, #PID<0.303.0>, #PID<0.273.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 233
Stack Size: 28
Reductions: 327
"B6"

16:04:18.886 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}} of Supervisor #PID<0.308.0> (Supervisor.Default) started
Pid: #PID<0.309.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:04:18.886 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B6"}}} of Supervisor #PID<0.308.0> (Supervisor.Default) started
Pid: #PID<0.310.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker

16:04:18.887 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}} of Supervisor #PID<0.312.0> (Supervisor.Default) started
Pid: #PID<0.313.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B2"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B2"

16:04:18.887 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B2"}}} of Supervisor #PID<0.312.0> (Supervisor.Default) started
Pid: #PID<0.314.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker

16:04:18.892 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}} of Supervisor #PID<0.316.0> (Supervisor.Default) started
Pid: #PID<0.317.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B4"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B4"

16:04:18.892 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B4"}}} of Supervisor #PID<0.316.0> (Supervisor.Default) started
Pid: #PID<0.318.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker

16:04:18.893 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}} of Supervisor #PID<0.320.0> (Supervisor.Default) started
Pid: #PID<0.321.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B8"

16:04:18.893 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}} of Supervisor #PID<0.320.0> (Supervisor.Default) started
Pid: #PID<0.322.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B6_0ca24d17-e350-442b-9cc7-252ebd3a712a"
"B4_1ae31548-6513-4684-82c6-f54c9d00b456"
"B2_222ba2bc-102d-4f04-b267-fd5cffa38bae"
"B8_f7c96fd3-5b65-457e-85f7-e45666e24272"
"B6_1400faa5-5c72-4a81-bcd9-b3a68eefa50f"
"B4_b0a95fae-3d87-476d-8676-529127f9a712"
"B2_0b5c73de-e44c-4a1f-b302-265d4576a72c"
"B8_3389b676-eb49-4147-bf33-cbc75bf699fc"
"B4_a2a09c58-fae0-4bc0-bd9e-b6213d4aa1a0"
"B6_ea9db948-9904-4b20-bbd0-a25076583d58"
"B2_dcd8b811-375e-44a5-ab32-84c4fcbf7cba"
"B8_7fc53c0c-c609-48dd-82a1-22cf09fe3376"
"B4_4698b398-0f9c-495c-9337-f413dcf72f00"
"B6_a33a6066-05ef-4b23-b444-c7dee9b88cbb"
"B2_227aaee5-364e-4245-aed0-001129ec1088"
"B8_d583441c-c579-48d2-aa19-f705e9ec956b"
"B4_9cd4dd0d-8ace-4577-8151-85297f82d1a1"
"B6_137e4bae-142d-4bbf-8e74-045f18d77a6e"
"B2_4ba994ed-4926-4aba-9282-52164a2d32f7"
"B8_0a24d9b8-e1b5-48ef-80b6-eec8e090a032"

16:04:18.926 [error] GenServer #PID<0.303.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B8"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.302.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B8"}, 5000]}}}
State: {:state, {#PID<0.303.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}} => {:child, #PID<0.304.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}} => {:child, #PID<0.305.0>, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}}, {Task, :start_link, [#Function<0.22546173/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.22546173/0 in KeyValCluster.Account.init/1>]}}]}}}

16:04:18.933 [error] Process #PID<0.303.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B8"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.302.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 4185
Stack Size: 28
Reductions: 18089

16:06:36.923 [error] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}} of Supervisor #PID<0.320.0> (Supervisor.Default) terminated
** (exit) killed
Pid: #PID<0.321.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:06:36.924 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}} of Supervisor #PID<0.320.0> (Supervisor.Default) started
Pid: #PID<0.350.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B8"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B8"

16:06:36.924 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B8"}}} of Supervisor #PID<0.320.0> (Supervisor.Default) started
Pid: #PID<0.351.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B8_e0ecfc29-2d53-48a7-baf7-f84527bb27fc"
"B8_7c48bf4c-ae05-4a10-8fc2-025e2cef6a5c"
"B8_23ada7e5-15d7-46e1-b386-e49fa97eab8d"
"B8_208b6851-79b6-4b2c-92a5-f600c548e592"
"B8_facb826b-1f39-466b-8b7b-9316c7118754"

16:07:00.616 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}} of Supervisor #PID<0.359.0> (Supervisor.Default) started
Pid: #PID<0.360.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B10"

16:07:00.617 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}} of Supervisor #PID<0.359.0> (Supervisor.Default) started
Pid: #PID<0.361.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B10_78e3324a-b4cd-4794-a166-77a21dae9472"
"B10_4fd55053-0b37-4633-a33e-98a81358f95b"
"B10_a187d7fe-2466-40da-86f4-e5791d4567b6"

16:07:00.617 [error] Process #PID<0.357.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B10"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 1
Messages: ["$gen_cast": {:add_auction, "B10", "B10_78e3324a-b4cd-4794-a166-77a21dae9472"}]
Links: [#PID<0.292.0>, #PID<0.359.0>, #PID<0.273.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 376
Stack Size: 28
Reductions: 353

16:07:00.618 [error] GenServer #PID<0.359.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B10"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.357.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B10"}, 5000]}}}
State: {:state, {#PID<0.359.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}} => {:child, #PID<0.360.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}} => {:child, #PID<0.361.0>, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}}, {Task, :start_link, [#Function<0.22546173/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.22546173/0 in KeyValCluster.Account.init/1>]}}]}}}

16:07:00.619 [error] Process #PID<0.359.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B10"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.357.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 18123
"B3"

16:07:00.621 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.363.0> (Supervisor.Default) started
Pid: #PID<0.364.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:07:00.621 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.363.0> (Supervisor.Default) started
Pid: #PID<0.365.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3_0f467be0-3cfa-4369-bea8-45fe7251bf3f"
"B3_efd097f0-ec8a-464f-b27d-4dc964642376"
"B3_52ea6857-c247-42ac-ae11-f70443d02118"
"B3_34705f27-2238-41bf-b0cc-37ac1b946fdd"

16:07:00.621 [error] Process #PID<0.362.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.292.0>, #PID<0.363.0>, #PID<0.273.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 233
Stack Size: 28
Reductions: 325

16:07:00.622 [error] GenServer #PID<0.363.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.362.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000]}}}
State: {:state, {#PID<0.363.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} => {:child, #PID<0.364.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} => {:child, #PID<0.365.0>, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {Task, :start_link, [#Function<0.22546173/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.22546173/0 in KeyValCluster.Account.init/1>]}}]}}}

16:07:00.622 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}} of Supervisor #PID<0.367.0> (Supervisor.Default) started
Pid: #PID<0.368.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B10"

16:07:00.622 [error] Process #PID<0.363.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.362.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 18124

16:07:00.623 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}} of Supervisor #PID<0.367.0> (Supervisor.Default) started
Pid: #PID<0.369.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B10_359b1c77-846e-4dbf-9230-33a31fe93a14"
"B10_8769a64d-c70f-4b9c-932a-f280be319fda"
"B10_6fce709a-c51b-4176-a28b-8cd6866d0581"
"B10_cb219d4b-75fe-4167-9ed9-0a286c87732d"

16:07:00.623 [error] Process #PID<0.366.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B10"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.292.0>, #PID<0.367.0>, #PID<0.273.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 233
Stack Size: 28
Reductions: 325

16:07:00.624 [error] GenServer #PID<0.367.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B10"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.366.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B10"}, 5000]}}}
State: {:state, {#PID<0.367.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}} => {:child, #PID<0.368.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}} => {:child, #PID<0.369.0>, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}}, {Task, :start_link, [#Function<0.22546173/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.22546173/0 in KeyValCluster.Account.init/1>]}}]}}}
"B3"
"B7"

16:07:00.624 [error] Process #PID<0.367.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B10"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.366.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 18123

16:07:00.625 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.372.0> (Supervisor.Default) started
Pid: #PID<0.373.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:07:00.625 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.372.0> (Supervisor.Default) started
Pid: #PID<0.374.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker

16:07:00.625 [error] Process #PID<0.371.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.292.0>, #PID<0.372.0>, #PID<0.273.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 233
Stack Size: 28
Reductions: 325

16:07:00.625 [error] GenServer #PID<0.372.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.371.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000]}}}
State: {:state, {#PID<0.372.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} => {:child, #PID<0.373.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} => {:child, #PID<0.374.0>, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, {Task, :start_link, [#Function<0.22546173/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.22546173/0 in KeyValCluster.Account.init/1>]}}]}}}

16:07:00.626 [error] Process #PID<0.372.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B3"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.371.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 18124

16:07:00.627 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}} of Supervisor #PID<0.377.0> (Supervisor.Default) started
Pid: #PID<0.378.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:07:00.628 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B7"}}} of Supervisor #PID<0.377.0> (Supervisor.Default) started
Pid: #PID<0.379.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3"

16:07:00.628 [error] Process #PID<0.376.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B7"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (elixir 1.14.5) lib/gen_server.ex:1027: GenServer.call/3
    (key_val_cluster 0.1.0) lib/account.ex:67: KeyValCluster.Account.init/1
    (stdlib 5.0) gen_server.erl:962: :gen_server.init_it/2
    (stdlib 5.0) gen_server.erl:917: :gen_server.init_it/6
    (stdlib 5.0) proc_lib.erl:241: :proc_lib.init_p_do_apply/3
Initial Call: KeyValCluster.Account.init/1
Ancestors: [KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.292.0>, #PID<0.377.0>, #PID<0.273.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 233
Stack Size: 28
Reductions: 325

16:07:00.628 [error] GenServer #PID<0.377.0> terminating
** (stop) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B7"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
Last message: {:EXIT, #PID<0.376.0>, {:noproc, {GenServer, :call, [{:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B7"}, 5000]}}}
State: {:state, {#PID<0.377.0>, Supervisor.Default}, :rest_for_one, {[{:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B7"}}}, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}}], %{{KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}} => {:child, #PID<0.378.0>, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}}, {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}}}]]}, :permanent, false, :infinity, :supervisor, [DynamicSupervisor]}, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B7"}}} => {:child, #PID<0.379.0>, {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B7"}}}, {Task, :start_link, [#Function<0.22546173/0 in KeyValCluster.Account.init/1>]}, :transient, false, 5000, :worker, [Task]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}}, start: {DynamicSupervisor, :start_link, [[name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}}}]]}, type: :supervisor}, %{id: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B7"}}}, restart: :transient, start: {Task, :start_link, [#Function<0.22546173/0 in KeyValCluster.Account.init/1>]}}]}}}

16:07:00.629 [error] Process #PID<0.377.0> terminating
** (exit) exited in: GenServer.call({:via, Horde.Registry, {KeyValCluster.Registry, :account}}, {:fetch, "B7"}, 5000)
    ** (EXIT) no process: the process is not alive or there's no process currently associated with the given name, possibly because its application isn't started
    (stdlib 5.0) gen_server.erl:1031: :gen_server.decode_msg/9
    (stdlib 5.0) proc_lib.erl:251: :proc_lib.wake_up/3
Initial Call: Supervisor.Default.init/1
Ancestors: [#PID<0.376.0>, KeyValCluster.AccountSupervisor.ProcessesSupervisor, KeyValCluster.AccountSupervisor.Supervisor, KeyValCluster.Supervisor, #PID<0.258.0>]
Message Queue Length: 0
Messages: []
Links: []
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 18124

16:07:00.629 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}} of Supervisor #PID<0.381.0> (Supervisor.Default) started
Pid: #PID<0.382.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B3"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor

16:07:00.629 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B3"}}} of Supervisor #PID<0.381.0> (Supervisor.Default) started
Pid: #PID<0.383.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B3_f041418a-dfe5-40fb-ba11-74b25ff6c799"
"B3_d0f0d978-6228-4022-933d-8687f9ff51cd"
"B3_dd9c1f5b-496d-430d-9165-19dc44f9142b"
"B3_11757223-4877-464f-8e86-93581d19c1c0"
"B3_26630efb-739d-4608-8c21-8324831aaa76"

16:07:00.694 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}} of Supervisor #PID<0.392.0> (Supervisor.Default) started
Pid: #PID<0.393.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B10"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B10"

16:07:00.694 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B10"}}} of Supervisor #PID<0.392.0> (Supervisor.Default) started
Pid: #PID<0.394.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B10_d7a9baf4-1ccc-4bc4-a77e-16427333ddb2"
"B10_5a73be07-46fb-49be-9b6a-806942eaf35a"
"B10_9d861261-d439-44e4-b82d-d1f8a8f9edca"
"B10_c31e15ce-2d93-4a22-8df2-23799e013b81"
"B10_a726adee-63b3-4ec9-bec9-5b5eeb9402a5"

16:07:00.699 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}} of Supervisor #PID<0.401.0> (Supervisor.Default) started
Pid: #PID<0.402.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B7"

16:07:00.699 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B7"}}} of Supervisor #PID<0.401.0> (Supervisor.Default) started
Pid: #PID<0.403.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B7_8c105113-16a2-41d0-aa80-94325fbcf6a5"
"B7_2d550b14-9361-4179-b0bd-6be461988591"
"B7_7ec5037b-8599-46e8-93d8-2f59fd0ac4a9"
"B7_0ff3744b-10cb-406f-91f0-9c8ffb215556"
"B7_7369d828-e5ed-4b19-a7bf-37abb7b82ec3"

16:07:29.722 [error] Child :undefined of Supervisor {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}} terminated
** (exit) killed
Pid: #PID<0.406.0>
Start Call: KeyValCluster.Account.Auction.start_link("B7_7ec5037b-8599-46e8-93d8-2f59fd0ac4a9")
Restart: :permanent
Shutdown: 5000
Type: :worker

16:07:35.530 [error] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}} of Supervisor #PID<0.401.0> (Supervisor.Default) terminated
** (exit) killed
Pid: #PID<0.402.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B7"

16:07:35.531 [info] Child {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}} of Supervisor #PID<0.401.0> (Supervisor.Default) started
Pid: #PID<0.416.0>
Start Call: DynamicSupervisor.start_link([name: {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B7"}}}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
"B7_7219bf73-de65-43f5-a705-5d89ed5c9255"

16:07:35.531 [info] Child {:via, Horde.Registry, {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor2, "B7"}}} of Supervisor #PID<0.401.0> (Supervisor.Default) started
Pid: #PID<0.417.0>
Start Call: Task.start_link(#Function<0.22546173/0 in KeyValCluster.Account.init/1>)
Restart: :transient
Shutdown: 5000
Type: :worker
"B7_6786ea8d-9868-4de4-b187-8014fbf6c9f3"
"B7_a95daf29-e635-4993-b919-9f9879e31272"
"B7_a2214278-682b-46b6-b055-43cc1b1f4341"
"B7_2aade42e-def2-457b-ab88-1b9496e60d5e"

16:07:40.196 [error] Child :undefined of Supervisor {KeyValCluster.Registry, {KeyValCluster.Account.AuctionSupervisor, "B6"}} terminated
** (exit) killed
Pid: #PID<0.323.0>
Start Call: KeyValCluster.Account.Auction.start_link("B6_0ca24d17-e350-442b-9cc7-252ebd3a712a")
Restart: :permanent
Shutdown: 5000
Type: :worker

16:07:50.295 [error] KeyValCluster.Account.Auction #PID<0.328.0> received unexpected message in handle_info/2: 2

